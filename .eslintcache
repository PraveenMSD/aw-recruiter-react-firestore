[{"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js":"1","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js":"2","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js":"3","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js":"4","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js":"5","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js":"6","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js":"7","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js":"8","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js":"9"},{"size":2070,"mtime":1614690881793,"results":"10","hashOfConfig":"11"},{"size":3951,"mtime":1614687378601,"results":"12","hashOfConfig":"11"},{"size":3565,"mtime":1614678846997,"results":"13","hashOfConfig":"11"},{"size":748,"mtime":1614609763839,"results":"14","hashOfConfig":"11"},{"size":3751,"mtime":1614691472708,"results":"15","hashOfConfig":"11"},{"size":153,"mtime":1614327890000,"results":"16","hashOfConfig":"11"},{"size":380,"mtime":1614327890000,"results":"17","hashOfConfig":"11"},{"size":942,"mtime":1614690921806,"results":"18","hashOfConfig":"11"},{"size":2832,"mtime":1614691526560,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"uba3kd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js",["42","43"],"import './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useContext } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Profile from './components/Profile'\nimport Header from './components/Navbar'\nimport Footer from './components/Footer'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport Admin from './components/Admin'\nimport Interviewer from './components/Interviewer'\nimport Recruiter from \"./components/Recruiter\"\nimport Assigncandidates from \"./components/Assigncandidates\"\nimport Candidates from './components/Candidates'\nimport Candidatestatus from './components/Candidatestatus'\nimport { UserContext } from './providers/UserProvider'\nimport 'react-toolbox/lib/table';\n\nfunction App() {\n\n  const { currentUser } = useContext(UserContext);\n\n  //const jsx = currentUser? <Profile/>:\n  const jsx = currentUser?.role === \"hr\" ? <Recruiter/>:\n  //const jsx = currentUser?.role === \"admin\" ?( <Admin />): currentUser?.role === \"hr\" ? (<Recruiter />) : currentUser?.role === \"interviewer\" ? (<Interviewer />) :\n  //const jsx = (currentUser?.role === \"hr\") ?( <Recruiter />): (currentUser?.role === \"admin\") ? (<Admin />) : currentUser? <Profile /> :\n  currentUser?.role === \"admin\" ? <Admin/> :\n    <div>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/login\" component={Login}/>\n      <Route exact path=\"/signup\" component={SignUp}/>\n      <Route exact path=\"/admin\" component={Admin}/>\n      <Route exact path=\"/recruiter\" component={Recruiter}/>\n      <Route exact path=\"/interviewer\" component={Interviewer}/>\n      <Route exact path=\"/candidates\" component={Candidates}/>\n      <Route exact path=\"/candidatestatus\" component={Candidatestatus}/>\n      <Route exact path=\"/assigncandidates\" component={Assigncandidates}/>\n    </div>\n    \n    console.log(currentUser?.role);\n  return (\n    <BrowserRouter>\n      <Header/>\n      <br/><br/>\n      {jsx}\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js",["44","45","46"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js",["47","48"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport { UserContext } from '../providers/UserProvider'\n\nconst Candidates = () => {\n    const [JobTitle, setJobTitle] = useState('');\n    const [jobs, setJobs] = useState([]);\n    const [jobAssignTitle, setAssignJobTitle] = useState('');\n    const {currentUser} = useContext(UserContext);\n    var userEmail = currentUser?.email || '';\n\n      useEffect(() => {\n        firestore.collection('jobs').get()\n          .then(response => {\n            const fetchedJobs = [];\n            response.docs.forEach(document => {\n              const fetchedJob = {\n                id: document.id,\n                title: document.data().jobtitle,\n                openings: document.data().totalopenings,\n                status: document.data().jobstatus,\n                level: document.data().entrylevel\n              };\n              fetchedJobs.push(fetchedJob);\n            });\n            setJobs(fetchedJobs);\n          })\n      }, []);\n    \n      console.log(jobs)\n\n      const handleSubmit = (e, userEmail, jobAssignTitle) => {\n\t\te.preventDefault();\n\t\tfirestore.collection('candidates')\n\t\t\t.doc()\n\t\t\t.set({userEmail ,jobAssignTitle })\n\t\t\t.catch((err) => { console.log(err) })\n\t}\n\n    const handleChange = async (e) => {\n\t\tsetAssignJobTitle( e.target.value );\n        console.log(jobAssignTitle)\n\t}\n\n    const jobDetailsTablecolumns = [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Title\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'title',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tTotal Openings\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'openings',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-6\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Status\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'status',\n\t\t\tclassName: 'px-4 py-3 text-sm',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tEntry Level\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'level',\n\t\t\tfilterable: false,\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t}\n\t];\n\n    return (\n        <div>\n            <h6 className=\"applyTitle\">{`${userEmail},select the job title and click apply`}</h6>\n\n            <form onSubmit={(e) => {\n                handleSubmit(e, userEmail, jobAssignTitle)\n            }}>\n                <select className=\"jobSelectDD\" onChange={(e) => handleChange(e)}>\n                    {jobs.length !== 0 && jobs.map((data) => (\n                    <option id=\"selectedValue\" name=\"selectedValue\" value={data.title}>{data.title}</option> )\n                    )}\n                </select>\n                <div className=\"form-group text-center\">\n                    <button className=\"btn btn-success applyCandidateJob\" type=\"submit\">Apply</button>\n                </div>\n            </form>\n\n            <div className=\"container\">\n\t\t\t<ReactTable\n                data={jobs}\n                columns={jobDetailsTablecolumns}\n\t\t\t\t\tclassName='candidateReactTable'\n                sortable={true}\n                defaultPageSize={5}\n            />\n\t\t    </div>\n        </div>\n    )\n}\n\nexport default Candidates","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js",["49"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js",["50","51","52"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport { UserContext } from '../providers/UserProvider'\n\nconst Interviewer = () => {\n    const [appliedCandidates, setCandidate] = useState([]);\n\n    useEffect(() => {\n        getCandidates();\n    }, []);\n\n    const getCandidates = () => {\n        firestore.collection('candidates').get()\n            .then(response => {\n                const fetchedCandidates = [];\n                response.docs.forEach(document => {\n                    const fetchedCandidate = {\n                        id: document.id,\n                        interviewer: document.data().interviewer,\n                        title: document.data().jobAssignTitle,\n                        useremail: document.data().userEmail,\n                        select: (\n                            <div className=\"text-center h-6\">\n                                <select onChange={(e) => handleChange(e, document.id)}>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"Selected\">Selected</option>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"Rejected\">Rejected</option>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"On-Hold\">On-Hold</option>\n                                </select>\n                            </div>\n                        ),\n                    };\n                    fetchedCandidates.push(fetchedCandidate);\n                });\n                setCandidate(fetchedCandidates);\n            })\n    }\n\n    console.log(appliedCandidates)\n\n\n    const handleChange = async (e, id) => {\n        firestore.collection('candidates')\n        .doc(id)\n        .update({ status: e.target.value })\n        .then((data) => {console.log(data)})\n        .catch((err) => { console.log(err) })\n      }\n\n    const appliedCandidatescolumns = [\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Interviewer\n                </div>\n            ),\n            accessor: 'interviewer',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Candidate\n                </div>\n            ),\n            accessor: 'useremail',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Position\n                </div>\n            ),\n            accessor: 'title',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Status\n                </div>\n            ),\n            accessor: 'select',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        }\n    ];\n\n    return (\n        <div>\n            <ReactTable\n                data={appliedCandidates}\n                columns={appliedCandidatescolumns}\n                className='assignCandidateReactTable'\n                sortable={true}\n                defaultPageSize={5}\n            />\n        </div >\n    )\n}\n\nexport default Interviewer","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js",["53"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\n\nconst Candidatestatus = () => {\n\n    const [appliedCandidates, setCandidate] = useState([]);\n\n    useEffect(() => {\n        getCandidates();\n    }, []);\n\n    const getCandidates = () => {\n        firestore.collection('candidates').get()\n            .then(response => {\n                const fetchedCandidates = [];\n                response.docs.forEach(document => {\n                    const fetchedCandidate = {\n                        id: document.id,\n                        interviewer: document.data().interviewer,\n                        title: document.data().jobAssignTitle,\n                        useremail: document.data().userEmail,\n                        status: document.data().status,\n                    };\n                    fetchedCandidates.push(fetchedCandidate);\n                });\n                setCandidate(fetchedCandidates);\n            })\n    }\n\n    const appliedCandidatescolumns = [\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Interviewer\n                </div>\n            ),\n            accessor: 'interviewer',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Candidate\n                </div>\n            ),\n            accessor: 'useremail',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Position\n                </div>\n            ),\n            accessor: 'title',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Status\n                </div>\n            ),\n            accessor: 'status',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        }\n    ];\n\n\n    return (\n        <div>\n            <ReactTable\n                data={appliedCandidates}\n                columns={appliedCandidatescolumns}\n                className='assignCandidateReactTable'\n                sortable={true}\n                defaultPageSize={5}\n            />\n        </div>\n    )\n}\n\nexport default Candidatestatus",{"ruleId":"54","severity":1,"message":"55","line":4,"column":32,"nodeType":"56","messageId":"57","endLine":4,"endColumn":38},{"ruleId":"54","severity":1,"message":"58","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":15},{"ruleId":"54","severity":1,"message":"59","line":13,"column":7,"nodeType":"56","messageId":"57","endLine":13,"endColumn":16},{"ruleId":"54","severity":1,"message":"60","line":14,"column":7,"nodeType":"56","messageId":"57","endLine":14,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":19,"column":5,"nodeType":"63","endLine":19,"endColumn":7,"suggestions":"64"},{"ruleId":"54","severity":1,"message":"65","line":8,"column":12,"nodeType":"56","messageId":"57","endLine":8,"endColumn":20},{"ruleId":"54","severity":1,"message":"66","line":8,"column":22,"nodeType":"56","messageId":"57","endLine":8,"endColumn":33},{"ruleId":"54","severity":1,"message":"67","line":13,"column":11,"nodeType":"56","messageId":"57","endLine":13,"endColumn":16},{"ruleId":"54","severity":1,"message":"68","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":27},{"ruleId":"54","severity":1,"message":"69","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":21},{"ruleId":"61","severity":1,"message":"62","line":12,"column":8,"nodeType":"63","endLine":12,"endColumn":10,"suggestions":"70"},{"ruleId":"54","severity":1,"message":"68","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":27},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'userEmail' is assigned a value but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCandidates'. Either include it or remove the dependency array.","ArrayExpression",["71"],"'JobTitle' is assigned a value but never used.","'setJobTitle' is assigned a value but never used.","'title' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.",["72"],{"desc":"73","fix":"74"},{"desc":"73","fix":"75"},"Update the dependencies array to be: [getCandidates]",{"range":"76","text":"77"},{"range":"78","text":"77"},[662,664],"[getCandidates]",[391,393]]