[{"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/App.js":"1","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Login.js":"2","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/firebase/config.js":"3","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Home.js":"4","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Navbar.js":"5","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/LoggedInLinks.js":"6","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Profile.js":"7","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/SignedOutLinks.js":"8","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/SignUp.js":"9","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Footer.js":"10","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Admin.js":"11","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/index.js":"12","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Recruiter.js":"13"},{"size":1098,"mtime":1614580909957,"results":"14","hashOfConfig":"15"},{"size":2312,"mtime":1614575400644,"results":"16","hashOfConfig":"15"},{"size":668,"mtime":1614328252675,"results":"17","hashOfConfig":"15"},{"size":153,"mtime":1614327890798,"results":"18","hashOfConfig":"15"},{"size":725,"mtime":1614342345682,"results":"19","hashOfConfig":"15"},{"size":609,"mtime":1614327890798,"results":"20","hashOfConfig":"15"},{"size":446,"mtime":1614327890798,"results":"21","hashOfConfig":"15"},{"size":380,"mtime":1614327890798,"results":"22","hashOfConfig":"15"},{"size":2370,"mtime":1614573343737,"results":"23","hashOfConfig":"15"},{"size":174,"mtime":1614343288733,"results":"24","hashOfConfig":"15"},{"size":156,"mtime":1614405662023,"results":"25","hashOfConfig":"15"},{"size":296,"mtime":1614327890798,"results":"26","hashOfConfig":"15"},{"size":4928,"mtime":1614586163859,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xt2cdv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/App.js",[],["62","63"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Login.js",["64","65"],"import React, { useContext, useState } from 'react'\nimport { UserContext } from '../providers/UserProvider'\nimport { auth, firestore } from '../firebase/config'\nimport { Link, Redirect, useHistory } from 'react-router-dom'\n\n\nconst Login = () => {\n\n    const { setCurrentUser } = useContext(UserContext);\n    const history = useHistory();\n\n    let [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n\n    const handleSubmit = (e, email, password) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).then(userAuth => {\n            firestore.collection('users').doc(userAuth.user.uid).get().then(user => {\n                setCurrentUser({\n                    name: user.data().name,\n                    email: userAuth.user.email,\n                })\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (user.data().role === \"admin\"){\n\t\t\t\t\t\t\t\t\thistory.push(\"/admin\");\n\t\t\t\t\t\t\t\t\tconsole.log(\"Welcome admin\")\n\t\t\t\t\t\t\t\t\treturn <Redirect to=\"/admin\" />\n\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Not authorized\")\n\t\t\t\t\t\t\t\t}\n            })\n        })\n\n    }\n\n    const handleChange = (e) => {\n        if (e.target.id === 'email-login'){\n            email = e.target.value;\n        } else {\n            password = e.target.value\n        }\n    }\n\t\t\n\n    return (\n        <div className=\"loginsignup-form\">\n            <h1 className=\"text-center\">Log in</h1>\n            <form onSubmit={(e) => handleSubmit(e, email, password)}>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n                <label htmlFor=\"email-login\">Email:</label>\n                <input onChange={handleChange} className=\"form-control\" type=\"email\" name=\"email-login\" id=\"email-login\" placeholder=\"Enter Your Email\"/>\n              </div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"password-login\">Password:</label>\n                <input onChange={handleChange} className=\"form-control\" type=\"password\" name=\"password-login\" id=\"password-login\" placeholder=\"Enter Your Password\"/>\n              </div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Login</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<h6>No account?\n\t\t\t\t\t\t\t\t\t<Link to=\"/signup\"> Create one</Link>\n\t\t\t\t\t\t\t\t</h6>\n        \t\t\t</div>\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/firebase/config.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Home.js",[],["66","67"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Navbar.js",["68","69"],"import React, { useContext } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { UserContext } from '../providers/UserProvider'\nimport LoggedInLinks from './LoggedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\n\n\nconst Header = () => {\n\n    const {currentUser} = useContext(UserContext);\n    const links = currentUser? <LoggedInLinks/>: <SignedOutLinks/>;\n    const userName = currentUser? currentUser.name : \"\";\n    const title = \"Applicant Tracking\"\n\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"#home\">Awesome Recruiter</Navbar.Brand>\n        <Nav className=\"mr-auto navLinks\">\n            {links}\n        </Nav>\n      </Navbar>\n    )\n}\n\nexport default Header",["70","71"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/LoggedInLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Profile.js",[],["72","73"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/SignedOutLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/SignUp.js",["74","75","76"],"import React, { useContext, useState } from 'react'\nimport { UserContext } from '../providers/UserProvider'\nimport { auth, firestore } from '../firebase/config'\nimport { Link } from 'react-router-dom'\n\nconst SignUp = () => {\n\n    const { setCurrentUser } = useContext(UserContext);\n\n    let [name, setName] = useState('');\n    let [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n\n\n    const handleSubmit = (e, name, email, password) => {\n        e.preventDefault();\n        auth.createUserWithEmailAndPassword(email, password).then(userAuth => {\n            firestore.collection('users').doc(userAuth.user.uid).set({name})\n                .then(() => {\n                    setCurrentUser({name, email})\n                })\n        })\n    }\n\n    const handleChange = (e) => {\n        if(e.target.id === 'name-sign-up'){\n            name = e.target.value;\n        } else if (e.target.id === 'email-sign-up'){\n            email = e.target.value;\n        } else {\n            password = e.target.value\n        }\n    }\n\n    return (\n\t\t\t<div className=\"component\">\n\t\t\t\t<div className=\"loginsignup-form\">\n\t\t\t\t<h1 className=\"text-center\">Sign up</h1>\n\t\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e, name, email, password)}>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"name-sign-up\">Name</label>\n\t\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"name-sign-up\" name=\"name-sign-up\" placeholder=\"Enter Your Name\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">     \n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"email-sign-up\">Email</label>\n\t\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"email\" id=\"email-sign-up\" name=\"email-sign-up\" placeholder=\"Enter Your Email\"/>\n\t\t\t\t\t\t\t</div>   \n\t\t\t\t\t\t\t<div className=\"form-group\">     \n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"password-sign-up\">Password</label>\n\t\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"password-sign-up\" name=\"password-sign-up\" placeholder=\"Enter Your Password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">     \n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success\">Sign up</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<h6>Already have account?\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\"> Sign in</Link>\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n    )\n}\n\nexport default SignUp\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Footer.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Admin.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/index.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React/src/components/Recruiter.js",["77","78","79","80"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Button, ButtonToolbar, Modal } from 'react-bootstrap';\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\n\n\nconst Recruiter = () => {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\tconst [jobsDetails, setJobDetails] = useState([]);\n\tlet [jobtitle, setJobTitle] = useState('');\n\tlet [totalopenings, setTotalOpenings] = useState('');\n\tlet [jobstatus, setJobStatus] = useState('');\n\tlet [entrylevel, setEntryLevel] = useState('');\n\n\tconst handleSubmit = (e, jobtitle, totalopenings, jobstatus, entrylevel) => {\n\t\te.preventDefault();\n\t\tfirestore.collection('jobs')\n\t\t\t.doc()\n\t\t\t.set({ jobtitle, totalopenings, jobstatus, entrylevel })\n\t\t\t.then(() => handleClose())\n\t\t\t.catch((err) => { console.log(err) })\n\t}\n\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.id === 'jobtitle-create') {\n\t\t\tsetJobTitle( e.target.value );\n\t\t} else if (e.target.id === 'totalopenings-create') {\n\t\t\tsetTotalOpenings( e.target.value );\n\t\t} else if (e.target.id === 'jobstatus-create') {\n\t\t\tsetJobStatus( e.target.value );\n\t\t} else {\n\t\t\tsetEntryLevel( e.target.value );\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t(async()=>{\n\t\t\tconsole.log(\"jobs\");\n\t\t\tawait firestore.collection('jobs').get()\n\t\t\t.then((snapshot) => {\n\t\t\t\tconsole.log(snapshot);\n\t\t\t\tvar data = []\n\t\t\t\tsnapshot.docs.map((doc) => {\n\t\t\t\t\tdata.push(doc.data())\n\t\t\t\t\tsetJobDetails([...data]);\n\t\t\t\t\tconsole.log(jobsDetails);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('Error getting documents', err);\n\t\t\t});\n\t\t })();\n\t},[]);\n\t\n\n\n\n\tconst BootstrapModal = () => (\n\t\t<div>\n\t\t\t<Button className=\"addJobBtn\" variant=\"primary\" onClick={handleShow}>\n\t\t\t\tAdd job\n\t\t\t</Button>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>New Job</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form onSubmit={(e) => {\n\t\t\t\t\t\thandleSubmit(e, jobtitle, totalopenings, jobstatus, entrylevel)\n\t\t\t\t\t\tconsole.log('here')\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"jobtitle-create\">Job Title</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"jobtitle-create\" name=\"jobtitle-create\" placeholder=\"Enter Job Title\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"totalopenings-create\">Total Openings</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"totalopenings-create\" name=\"totalopenings-create\" placeholder=\"Enter Total Openings\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"jobstatus-create\">Job Status</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"jobstatus-create\" name=\"jobstatus-create\" placeholder=\"Enter Status\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"entrylevel-create\">Entry Level</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"entrylevel-create\" name=\"entrylevel-create\" placeholder=\"Enter entry Level\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group text-center\">\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button> &nbsp;\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" type=\"submit\" onClick={useEffect}>Create</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n\n\tconst jobDetailsTablecolumns = [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Title\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'jobtitle',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tTotal Openings\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'totalopenings',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-6\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Status\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'jobstatus',\n\t\t\tclassName: 'px-4 py-3 text-sm',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tEntry Level\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'entrylevel',\n\t\t\tfilterable: false,\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t];\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<h4 className=\"recruiterTitle font-weight-bold\">Jobs</h4>\n\t\t\t{BootstrapModal()}\n\t\t\t{console.log(jobsDetails)}\n\t\t<div className=\"container\">\n\t\t\t<ReactTable\n          data={jobsDetails}\n          columns={jobDetailsTablecolumns}\n\t\t\t\t\tclassName='ReactTable'\n          sortable={true}\n          defaultPageSize={5}\n        />\n\t\t</div>\n\n\t\t</>\n\t);\n}\n\n//render(<Recruiter />);\n\nexport default Recruiter",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":12,"column":17,"nodeType":"87","messageId":"88","endLine":12,"endColumn":25},{"ruleId":"85","severity":1,"message":"89","line":13,"column":20,"nodeType":"87","messageId":"88","endLine":13,"endColumn":31},{"ruleId":"81","replacedBy":"90"},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","severity":1,"message":"92","line":12,"column":11,"nodeType":"87","messageId":"88","endLine":12,"endColumn":19},{"ruleId":"85","severity":1,"message":"93","line":13,"column":11,"nodeType":"87","messageId":"88","endLine":13,"endColumn":16},{"ruleId":"81","replacedBy":"94"},{"ruleId":"83","replacedBy":"95"},{"ruleId":"81","replacedBy":"96"},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","severity":1,"message":"98","line":10,"column":16,"nodeType":"87","messageId":"88","endLine":10,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":11,"column":17,"nodeType":"87","messageId":"88","endLine":11,"endColumn":25},{"ruleId":"85","severity":1,"message":"89","line":12,"column":20,"nodeType":"87","messageId":"88","endLine":12,"endColumn":31},{"ruleId":"85","severity":1,"message":"99","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":27},{"ruleId":"85","severity":1,"message":"100","line":2,"column":18,"nodeType":"87","messageId":"88","endLine":2,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":49,"column":29,"nodeType":"103","messageId":"104","endLine":49,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":59,"column":4,"nodeType":"107","endLine":59,"endColumn":6,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'setEmail' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.",["109"],["110"],"'userName' is assigned a value but never used.","'title' is assigned a value but never used.",["109"],["110"],["109"],["110"],"'setName' is assigned a value but never used.","'useContext' is defined but never used.","'ButtonToolbar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'jobsDetails'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [jobsDetails]",{"range":"114","text":"115"},[1677,1679],"[jobsDetails]"]