[{"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js":"1","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js":"2","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js":"3","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js":"4","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js":"5","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js":"6","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js":"7","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js":"8","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js":"9","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js":"10","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js":"11","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js":"12","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js":"13","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js":"14","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js":"15","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js":"16","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js":"17"},{"size":2179,"mtime":1614747589000,"results":"18","hashOfConfig":"19"},{"size":4122,"mtime":1614772589104,"results":"20","hashOfConfig":"19"},{"size":4592,"mtime":1614759381602,"results":"21","hashOfConfig":"19"},{"size":748,"mtime":1614609763839,"results":"22","hashOfConfig":"19"},{"size":3751,"mtime":1614691472708,"results":"23","hashOfConfig":"19"},{"size":153,"mtime":1614327890000,"results":"24","hashOfConfig":"19"},{"size":380,"mtime":1614327890000,"results":"25","hashOfConfig":"19"},{"size":942,"mtime":1614690921000,"results":"26","hashOfConfig":"19"},{"size":2832,"mtime":1614691526560,"results":"27","hashOfConfig":"19"},{"size":296,"mtime":1614327890000,"results":"28","hashOfConfig":"19"},{"size":174,"mtime":1614343288000,"results":"29","hashOfConfig":"19"},{"size":156,"mtime":1614405662000,"results":"30","hashOfConfig":"19"},{"size":5691,"mtime":1614757533568,"results":"31","hashOfConfig":"19"},{"size":358,"mtime":1614750875312,"results":"32","hashOfConfig":"19"},{"size":2374,"mtime":1614597890000,"results":"33","hashOfConfig":"19"},{"size":668,"mtime":1614328252000,"results":"34","hashOfConfig":"19"},{"size":3021,"mtime":1614772807954,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"uba3kd",{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js",["77","78"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js",["79","80","81","82","83","84","85","86"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport { UserContext } from '../providers/UserProvider'\n\nconst Assigncandidates = () => {\n\n  const [appliedCandidates, setCandidate] = useState([]);\n  const [assignInterviewer, setInterviewer] = useState([]);\n  const [assignInterviewerName, setInterviewerName] = useState([]);\n  const [candidateAssignInterviewer, setAssignInterviewer] = useState('');\n  const { currentUser } = useContext(UserContext);\n  var userEmail = currentUser?.email || '';\n  var value = 'initial'\n\n  useEffect(() => {\n    getInterviewer();\n  }, []);\n\n\n\n  const getCandidates = (fetchedUsers) => {\n    firestore.collection('candidates').get()\n      .then(response => {\n        const fetchedCandidates = [];\n        console.log(\"Length\", fetchedUsers.length);\n        response.docs.forEach(document => {\n          const fetchedCandidate = {\n            id: document.id,\n            title: document.data().userEmail,\n            openings: document.data().jobAssignTitle,\n            assignedTo: document.data().interviewer,\n            select: (\n              <select onClick={(e) => handleChange(e, document.id)}>\n                {fetchedUsers.length !== 0 && fetchedUsers.map((data) => (\n                  <option \n                    id=\"selectedValue\" \n                    name=\"selectedValue\" \n                    value={data.name}\n                    >\n                    {data.name}\n                  </option>)\n                )}\n              </select>\n            )\n          };\n          fetchedCandidates.push(fetchedCandidate);\n        });\n\n        setCandidate(fetchedCandidates);\n      })\n  }\n\n\n  const getInterviewer = () => {\n    firestore.collection('users').where('role', '==', \"interviewer\").get()\n      .then(response => {\n        const fetchedUsers = [];\n        response.docs.forEach(document => {\n          const fetchedUser = {\n            id: document.id,\n            name: document.data().name,\n            role: document.data().role,\n          };\n          fetchedUsers.push(fetchedUser);\n        });\n        // setInterviewer(fetchedUsers);\n        getCandidates(fetchedUsers);\n      })\n  }\n\n\n  const handleChange = async (e, id) => {\n    console.log(e.target.value);\n    firestore.collection('candidates')\n      .doc(id)\n      .update({ interviewer: e.target.value })\n      .then((data) => { console.log(data) })\n      .catch((err) => { console.log(err) })\n  }\n\n\n  // const handleSubmit = (e, userEmail, jobAssignTitle) => {\n  //   e.preventDefault();\n  //   firestore.collection('candidates')\n  //     .doc()\n  //     .set({ userEmail, jobAssignTitle })\n  //     .then((data) => {console.log(data)})\n  //     .catch((err) => { console.log(err) })\n  // }\n\n  const appliedCandidatescolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">\n          Job Title\n        </div>\n      ),\n      accessor: 'title',\n      className: 'font',\n      width: 250,\n      Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">\n          Total Openings\n        </div>\n      ),\n      accessor: 'openings',\n      className: 'font',\n      width: 250,\n      Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">\n          Assign To\n        </div>\n      ),\n      accessor: 'select',\n      className: 'font',\n      width: 250,\n      Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n    }\n  ];\n\n  return (\n    <div>\n      {console.log(assignInterviewer)}\n      {/* <h6 className=\"applyTitle\">{`${userEmail} select and assign interviewer`}</h6> */}\n      <ReactTable\n        data={appliedCandidates}\n        columns={appliedCandidatescolumns}\n        className='assignCandidateReactTable'\n        sortable={true}\n        defaultPageSize={5}\n      />\n    </div>\n  )\n}\n\nexport default Assigncandidates","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js",["87","88","89","90","91","92"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js",["93"],"import React, { useContext } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { UserContext } from '../providers/UserProvider'\nimport LoggedInLinks from './LoggedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\n\n\nconst Header = () => {\n\n    const {currentUser} = useContext(UserContext);\n    const links = currentUser? <LoggedInLinks/>: <SignedOutLinks/>;\n    const userName = currentUser? currentUser.name : \"\";\n    const title = \"Applicant Tracking\"\n\n    return (\n        <Navbar bg=\"light\" variant=\"light\">\n        <Navbar.Brand href=\"#home\">Awesome Recruiter</Navbar.Brand>\n        <Nav className=\"mr-auto navLinks\">\n            {userName}\n            {links}\n        </Nav>\n      </Navbar>\n    )\n}\n\nexport default Header",["94","95"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js",["96","97","98"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport { UserContext } from '../providers/UserProvider'\n\nconst Interviewer = () => {\n    const [appliedCandidates, setCandidate] = useState([]);\n\n    useEffect(() => {\n        getCandidates();\n    }, []);\n\n    const getCandidates = () => {\n        firestore.collection('candidates').get()\n            .then(response => {\n                const fetchedCandidates = [];\n                response.docs.forEach(document => {\n                    const fetchedCandidate = {\n                        id: document.id,\n                        interviewer: document.data().interviewer,\n                        title: document.data().jobAssignTitle,\n                        useremail: document.data().userEmail,\n                        select: (\n                            <div className=\"text-center h-6\">\n                                <select onChange={(e) => handleChange(e, document.id)}>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"Selected\">Selected</option>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"Rejected\">Rejected</option>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"On-Hold\">On-Hold</option>\n                                </select>\n                            </div>\n                        ),\n                    };\n                    fetchedCandidates.push(fetchedCandidate);\n                });\n                setCandidate(fetchedCandidates);\n            })\n    }\n\n    console.log(appliedCandidates)\n\n\n    const handleChange = async (e, id) => {\n        firestore.collection('candidates')\n        .doc(id)\n        .update({ status: e.target.value })\n        .then((data) => {console.log(data)})\n        .catch((err) => { console.log(err) })\n      }\n\n    const appliedCandidatescolumns = [\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Interviewer\n                </div>\n            ),\n            accessor: 'interviewer',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Candidate\n                </div>\n            ),\n            accessor: 'useremail',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Position\n                </div>\n            ),\n            accessor: 'title',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Status\n                </div>\n            ),\n            accessor: 'select',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        }\n    ];\n\n    return (\n        <div>\n            <ReactTable\n                data={appliedCandidates}\n                columns={appliedCandidatescolumns}\n                className='assignCandidateReactTable'\n                sortable={true}\n                defaultPageSize={5}\n            />\n        </div >\n    )\n}\n\nexport default Interviewer","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js",["99"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\n\nconst Candidatestatus = () => {\n\n    const [appliedCandidates, setCandidate] = useState([]);\n\n    useEffect(() => {\n        getCandidates();\n    }, []);\n\n    const getCandidates = () => {\n        firestore.collection('candidates').get()\n            .then(response => {\n                const fetchedCandidates = [];\n                response.docs.forEach(document => {\n                    const fetchedCandidate = {\n                        id: document.id,\n                        interviewer: document.data().interviewer,\n                        title: document.data().jobAssignTitle,\n                        useremail: document.data().userEmail,\n                        status: document.data().status,\n                    };\n                    fetchedCandidates.push(fetchedCandidate);\n                });\n                setCandidate(fetchedCandidates);\n            })\n    }\n\n    const appliedCandidatescolumns = [\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Interviewer\n                </div>\n            ),\n            accessor: 'interviewer',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Candidate\n                </div>\n            ),\n            accessor: 'useremail',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Position\n                </div>\n            ),\n            accessor: 'title',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Status\n                </div>\n            ),\n            accessor: 'status',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        }\n    ];\n\n\n    return (\n        <div>\n            <ReactTable\n                data={appliedCandidates}\n                columns={appliedCandidatescolumns}\n                className='assignCandidateReactTable'\n                sortable={true}\n                defaultPageSize={5}\n            />\n        </div>\n    )\n}\n\nexport default Candidatestatus","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js",[],["100","101"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js",["102","103","104","105"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Button, ButtonToolbar, Modal } from 'react-bootstrap';\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\n\n\nconst Recruiter = () => {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\tconst [jobsDetails, setJobDetails] = useState([]);\n\tlet [jobtitle, setJobTitle] = useState('');\n\tlet [totalopenings, setTotalOpenings] = useState('');\n\tlet [jobstatus, setJobStatus] = useState('');\n\tlet [entrylevel, setEntryLevel] = useState('');\n\tconst offersRef = firestore.collection('jobs');\n\n\tconst handleSubmit = (e, jobtitle, totalopenings, jobstatus, entrylevel) => {\n\t\te.preventDefault();\n\t\tfirestore.collection('jobs')\n\t\t\t.doc()\n\t\t\t.set({ jobtitle, totalopenings, jobstatus, entrylevel })\n\t\t\t.then(() => handleClose())\n\t\t\t.catch((err) => { console.log(err) })\n\t}\n\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.id === 'jobtitle-create') {\n\t\t\tsetJobTitle( e.target.value );\n\t\t} else if (e.target.id === 'totalopenings-create') {\n\t\t\tsetTotalOpenings( parseInt(e.target.value) );\n\t\t} else if (e.target.id === 'jobstatus-create') {\n\t\t\tsetJobStatus( e.target.value );\n\t\t} else {\n\t\t\tsetEntryLevel( e.target.value );\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t(async()=>{\n\t\t\tawait firestore.collection('jobs').get()\n\t\t\t.then((snapshot) => {\n\t\t\t\tconsole.log(snapshot);\n\t\t\t\tvar data = []\n\t\t\t\tsnapshot.docs.map((doc) => {\n\t\t\t\t\tconsole.log(doc.id)\n\n\t\t\t\t\tvar view=(\n\t\t\t\t\t\t<div className=\"text-center h-4\"><button type='button' onClick={() => handleDelete(doc.id)}>\n\t\t\t\t\t\t\t&#10005;\n\t\t\t\t\t\t</button></div>\n\t\t\t\t\t)\n\n\t\t\t\t\tdata.push({...doc.data(), id: doc.id, view})\n\t\t\t\t\tsetJobDetails([...data]);\n\t\t\t\t\tconsole.log(jobsDetails);\n\t\t\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('Error getting documents', err);\n\t\t\t});\n\t\t })();\n\t},[]);\n\t\n\tconst handleDelete = id => {\n\t\toffersRef.doc(id)\n\t\t.delete()\n\t};\n\n\n\tconst BootstrapModal = () => (\n\t\t<div>\n\t\t\t<Button className=\"addJobBtn\" variant=\"primary\" onClick={handleShow}>\n\t\t\t\tAdd job\n\t\t\t</Button>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>New Job</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form onSubmit={(e) => {\n\t\t\t\t\t\thandleSubmit(e, jobtitle, totalopenings, jobstatus, entrylevel)\n\t\t\t\t\t\tconsole.log('here')\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"jobtitle-create\">Job Title</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"jobtitle-create\" name=\"jobtitle-create\" placeholder=\"Enter Job Title\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"totalopenings-create\">Total Openings</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"number\" id=\"totalopenings-create\" name=\"totalopenings-create\" placeholder=\"Enter Total Openings\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"jobstatus-create\">Job Status</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"jobstatus-create\" name=\"jobstatus-create\" placeholder=\"Enter Status\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"entrylevel-create\">Entry Level</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"entrylevel-create\" name=\"entrylevel-create\" placeholder=\"Enter entry Level\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group text-center\">\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button> &nbsp;\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" type=\"submit\" onClick={useEffect}>Create</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n\n\n\tconst jobDetailsTablecolumns = [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Title\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'id',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tshow: false,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Title\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'jobtitle',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tTotal Openings\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'totalopenings',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-6\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Status\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'jobstatus',\n\t\t\tclassName: 'px-4 py-3 text-sm',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tEntry Level\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'entrylevel',\n\t\t\tfilterable: false,\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tAction\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'view',\n\t\t\tfilterable: false,\n\t\t\twidth: 250,\n\t\t\t// Cell: row => {row.value}\n\t\t}\n\t];\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<h4 className=\"recruiterTitle font-weight-bold\">Jobs</h4>\n\t\t\t{BootstrapModal()}\n\t\t\t{console.log(jobsDetails)}\n\t\t<div className=\"container\">\n\t\t\t<ReactTable\n          data={jobsDetails}\n          columns={jobDetailsTablecolumns}\n\t\t\t\t\tclassName='ReactTable'\n          sortable={true}\n          defaultPageSize={5}\n        />\n\t\t</div>\n\n\t\t</>\n\t);\n}\n\n//render(<Recruiter />);\n\nexport default Recruiter","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js",["106","107","108"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js",["109","110","111"],{"ruleId":"112","severity":1,"message":"113","line":4,"column":32,"nodeType":"114","messageId":"115","endLine":4,"endColumn":38},{"ruleId":"112","severity":1,"message":"116","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":15},{"ruleId":"112","severity":1,"message":"117","line":10,"column":29,"nodeType":"114","messageId":"115","endLine":10,"endColumn":43},{"ruleId":"112","severity":1,"message":"118","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":31},{"ruleId":"112","severity":1,"message":"119","line":11,"column":33,"nodeType":"114","messageId":"115","endLine":11,"endColumn":51},{"ruleId":"112","severity":1,"message":"120","line":12,"column":10,"nodeType":"114","messageId":"115","endLine":12,"endColumn":36},{"ruleId":"112","severity":1,"message":"121","line":12,"column":38,"nodeType":"114","messageId":"115","endLine":12,"endColumn":58},{"ruleId":"112","severity":1,"message":"122","line":14,"column":7,"nodeType":"114","messageId":"115","endLine":14,"endColumn":16},{"ruleId":"112","severity":1,"message":"123","line":15,"column":7,"nodeType":"114","messageId":"115","endLine":15,"endColumn":12},{"ruleId":"124","severity":1,"message":"125","line":19,"column":6,"nodeType":"126","endLine":19,"endColumn":8,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":8,"column":12,"nodeType":"114","messageId":"115","endLine":8,"endColumn":20},{"ruleId":"112","severity":1,"message":"129","line":8,"column":22,"nodeType":"114","messageId":"115","endLine":8,"endColumn":33},{"ruleId":"112","severity":1,"message":"130","line":13,"column":9,"nodeType":"114","messageId":"115","endLine":13,"endColumn":17},{"ruleId":"112","severity":1,"message":"131","line":13,"column":19,"nodeType":"114","messageId":"115","endLine":13,"endColumn":30},{"ruleId":"124","severity":1,"message":"132","line":18,"column":10,"nodeType":"126","endLine":18,"endColumn":12,"suggestions":"133"},{"ruleId":"112","severity":1,"message":"134","line":68,"column":11,"nodeType":"114","messageId":"115","endLine":68,"endColumn":23},{"ruleId":"112","severity":1,"message":"135","line":13,"column":11,"nodeType":"114","messageId":"115","endLine":13,"endColumn":16},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"112","severity":1,"message":"140","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":27},{"ruleId":"112","severity":1,"message":"141","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":21},{"ruleId":"124","severity":1,"message":"142","line":12,"column":8,"nodeType":"126","endLine":12,"endColumn":10,"suggestions":"143"},{"ruleId":"112","severity":1,"message":"140","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":27},{"ruleId":"136","replacedBy":"144"},{"ruleId":"138","replacedBy":"145"},{"ruleId":"112","severity":1,"message":"140","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":27},{"ruleId":"112","severity":1,"message":"146","line":2,"column":18,"nodeType":"114","messageId":"115","endLine":2,"endColumn":31},{"ruleId":"147","severity":1,"message":"148","line":49,"column":29,"nodeType":"149","messageId":"150","endLine":49,"endColumn":31},{"ruleId":"124","severity":1,"message":"151","line":68,"column":4,"nodeType":"126","endLine":68,"endColumn":6,"suggestions":"152"},{"ruleId":"112","severity":1,"message":"153","line":10,"column":16,"nodeType":"114","messageId":"115","endLine":10,"endColumn":23},{"ruleId":"112","severity":1,"message":"154","line":11,"column":17,"nodeType":"114","messageId":"115","endLine":11,"endColumn":25},{"ruleId":"112","severity":1,"message":"155","line":12,"column":20,"nodeType":"114","messageId":"115","endLine":12,"endColumn":31},{"ruleId":"112","severity":1,"message":"156","line":4,"column":16,"nodeType":"114","messageId":"115","endLine":4,"endColumn":24},{"ruleId":"112","severity":1,"message":"154","line":14,"column":17,"nodeType":"114","messageId":"115","endLine":14,"endColumn":25},{"ruleId":"112","severity":1,"message":"155","line":15,"column":20,"nodeType":"114","messageId":"115","endLine":15,"endColumn":31},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'setInterviewer' is assigned a value but never used.","'assignInterviewerName' is assigned a value but never used.","'setInterviewerName' is assigned a value but never used.","'candidateAssignInterviewer' is assigned a value but never used.","'setAssignInterviewer' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInterviewer'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'JobTitle' is assigned a value but never used.","'setJobTitle' is assigned a value but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getJobsForCandidates'. Either include it or remove the dependency array.",["158"],"'handleChange' is assigned a value but never used.","'title' is assigned a value but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getCandidates'. Either include it or remove the dependency array.",["161"],["159"],["160"],"'ButtonToolbar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'handleDelete' and 'jobsDetails'. Either include them or remove the dependency array.",["162"],"'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Redirect' is defined but never used.",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [getInterviewer]",{"range":"171","text":"172"},"Update the dependencies array to be: [getJobsForCandidates]",{"range":"173","text":"174"},"Update the dependencies array to be: [getCandidates]",{"range":"175","text":"176"},"Update the dependencies array to be: [handleDelete, jobsDetails]",{"range":"177","text":"178"},[710,712],"[getInterviewer]",[766,768],"[getJobsForCandidates]",[391,393],"[getCandidates]",[1925,1927],"[handleDelete, jobsDetails]"]