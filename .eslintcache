[{"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js":"1","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js":"2","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js":"3","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js":"4","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/functions.js":"5","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js":"6","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js":"7","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js":"8","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js":"9","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js":"10","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js":"11","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js":"12","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js":"13","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js":"14","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js":"15","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js":"16","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Dashboard.js":"17","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js":"18","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js":"19","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js":"20"},{"size":744,"mtime":1615892344869,"results":"21","hashOfConfig":"22"},{"size":7537,"mtime":1615893662029,"results":"23","hashOfConfig":"22"},{"size":6021,"mtime":1615893216925,"results":"24","hashOfConfig":"22"},{"size":658,"mtime":1615889234666,"results":"25","hashOfConfig":"22"},{"size":258,"mtime":1615889234686,"results":"26","hashOfConfig":"22"},{"size":3800,"mtime":1615893001363,"results":"27","hashOfConfig":"22"},{"size":296,"mtime":1615539205145,"results":"28","hashOfConfig":"22"},{"size":2446,"mtime":1615893578836,"results":"29","hashOfConfig":"22"},{"size":4504,"mtime":1615893484588,"results":"30","hashOfConfig":"22"},{"size":6872,"mtime":1615893166029,"results":"31","hashOfConfig":"22"},{"size":7218,"mtime":1615893630993,"results":"32","hashOfConfig":"22"},{"size":358,"mtime":1615868903751,"results":"33","hashOfConfig":"22"},{"size":120,"mtime":1615889203906,"results":"34","hashOfConfig":"22"},{"size":5508,"mtime":1615893060452,"results":"35","hashOfConfig":"22"},{"size":5187,"mtime":1615893499816,"results":"36","hashOfConfig":"22"},{"size":135,"mtime":1615889204822,"results":"37","hashOfConfig":"22"},{"size":3987,"mtime":1615893425227,"results":"38","hashOfConfig":"22"},{"size":325,"mtime":1615867426907,"results":"39","hashOfConfig":"22"},{"size":2853,"mtime":1615889206058,"results":"40","hashOfConfig":"22"},{"size":515,"mtime":1615892450362,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"uba3kd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js",[],["88","89"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js",["90","91"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { firestore } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Ring } from \"react-spinners-css\";\n\nconst Recruiter = () => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [jobsDetails, setJobDetails] = useState([]);\n  let [jobtitle, setJobTitle] = useState(\"\");\n  let [totalopenings, setTotalOpenings] = useState(\"\");\n  let [jobstatus, setJobStatus] = useState(\"\");\n  let [entrylevel, setEntryLevel] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const offersRef = firestore.collection(\"jobs\");\n\n  const handleSubmit = (e, jobtitle, totalopenings, jobstatus, entrylevel) => {\n    e.preventDefault();\n    if (jobtitle === \"\") {\n      toast.error(\"Job title cannot be empty\");\n    } else if (totalopenings === \"\") {\n      toast.error(\"Total openings cannot be empty\");\n    } else if (jobstatus === \"\") {\n      toast.error(\"Please choose job status\");\n    } else if (entrylevel === \"\") {\n      toast.error(\"Please choose entry level\");\n    } else {\n      firestore\n        .collection(\"jobs\")\n        .doc()\n        .set({ jobtitle, totalopenings, jobstatus, entrylevel })\n        .then(() => handleClose())\n        .catch((err) => {\n          console.log(err);\n        });\n      toast.success(\"Jobs added successfully\");\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.id === \"jobtitle-create\") {\n      setJobTitle(e.target.value);\n    } else if (e.target.id === \"totalopenings-create\") {\n      setTotalOpenings(parseInt(e.target.value));\n    } else if (e.target.id === \"entrylevel-create\") {\n      setEntryLevel(e.target.value);\n      setJobStatus(\"Active\");\n    }\n  };\n\n  useEffect(() => {\n    firestore.collection(\"jobs\").onSnapshot((querySnapshot) => {\n      var data = [];\n      querySnapshot.docs.map((doc) => {\n        var view = (\n          <div className=\"text-center h-4\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={() => handleDelete(doc.id)}\n            >\n              Delete\n            </button>\n          </div>\n        );\n\n        data.push({ ...doc.data(), id: doc.id, view });\n        setJobDetails([...data]);\n\n        setLoading(false);\n      });\n    });\n  }, []);\n  const handleDelete = (id) => {\n    offersRef.doc(id).delete();\n    toast.warn(\"Job deleted successfully\");\n  };\n\n  const BootstrapModal = () => (\n    <>\n      <div className=\"d-flex bd-highlight\">\n        <div className=\"ml-auto p-2 bd-highlight addJobBtn\">\n          <Button className=\"addJobBtn\" variant=\"primary\" onClick={handleShow}>\n            Add job\n          </Button>\n        </div>\n      </div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Job</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form\n            onSubmit={(e) => {\n              handleSubmit(e, jobtitle, totalopenings, jobstatus, entrylevel);\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"jobtitle-create\">Job Title</label>\n              <input\n                onChange={handleChange}\n                className=\"form-control\"\n                type=\"text\"\n                id=\"jobtitle-create\"\n                name=\"jobtitle-create\"\n                placeholder=\"Enter Job Title\"\n                required={true}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"totalopenings-create\">Total Openings</label>\n              <input\n                onChange={handleChange}\n                className=\"form-control\"\n                type=\"number\"\n                id=\"totalopenings-create\"\n                name=\"totalopenings-create\"\n                placeholder=\"Enter Total Openings\"\n                required={true}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"entrylevel-create\">Entry Level</label>\n\n              <select\n                className=\"form-control\"\n                type=\"text\"\n                id=\"entrylevel-create\"\n                name=\"entrylevel-create\"\n                onClick={(e) => handleChange(e)}\n              >\n                <option\n                  id=\"selectedValue\"\n                  name=\"selectedValue\"\n                  value=\"Please select\"\n                >\n                  Please select...\n                </option>\n                <option id=\"selectedValue\" name=\"selectedValue\" value=\"Fresher\">\n                  Fresher\n                </option>\n                <option\n                  id=\"selectedValue\"\n                  name=\"selectedValue\"\n                  value=\"Experience\"\n                >\n                  Experience\n                </option>\n              </select>\n            </div>\n            <div className=\"form-group text-center\">\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>{\" \"}\n              &nbsp;\n              <button className=\"btn btn-success\" type=\"submit\">\n                Create\n              </button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n\n  const jobDetailsTablecolumns = [\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Job ID</div>,\n      accessor: \"id\",\n      className: \"font\",\n      width: 250,\n      show: false,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Title</div>\n      ),\n      accessor: \"jobtitle\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Total Openings</div>\n      ),\n      accessor: \"totalopenings\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Status</div>\n      ),\n      accessor: \"jobstatus\",\n      className: \"px-4 py-3 text-sm\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Entry Level</div>\n      ),\n      accessor: \"entrylevel\",\n      filterable: false,\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Action</div>,\n      accessor: \"view\",\n      filterable: false,\n      width: 200,\n      // Cell: row => {row.value}\n    },\n  ];\n\n  return !loading ? (\n    <>\n      {BootstrapModal()}\n      <div className=\"container text-center\">\n        <ReactTable\n          data={jobsDetails}\n          columns={jobDetailsTablecolumns}\n          className=\"-striped -highlight ReactTable\"\n          sortable={true}\n          defaultPageSize={5}\n          resizable={false}\n          showPageSizeOptions={false}\n        />\n      </div>\n      <ToastContainer />\n    </>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Recruiter;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js",["92","93"],"import React, { useState, useEffect } from \"react\";\nimport { firestore, auth } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { Ring } from \"react-spinners-css\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { CSVLink } from \"react-csv\";\n\nconst Candidatestatus = () => {\n  const [appliedCandidates, setCandidate] = useState([]);\n  const currentLoggedUser = auth.currentUser;\n  const userName = currentLoggedUser?.email.split(\"@\")[0];\n  const capUserName = userName?.charAt(0).toUpperCase() + userName?.slice(1);\n  const [loading, setLoading] = useState(true);\n  const [userRole, setuserRole] = useState(\"\");\n\n  useEffect(() => {\n    getCandidates();\n    getUserRole();\n  }, []);\n\n  const getUserRole = () => {\n    firestore\n      .collection(\"users\")\n      .doc(currentLoggedUser?.uid)\n      .onSnapshot((querySnapshot) => {\n        setuserRole(querySnapshot.data()?.role);\n      });\n  };\n\n  console.log(userRole)\n\n  const getCandidates = () => {\n    firestore\n      .collection(\"candidates\")\n      .onSnapshot((querySnapshot) => {\n        const fetchedCandidates = [];\n        querySnapshot.docs.map((document) => {\n          const fetchedCandidate = {\n            id: document.id,\n            interviewer: document.data().interviewer,\n            title: document.data().jobAssignTitle,\n            useremail: document.data().userEmail,\n            candidatename: document.data().userEmail,\n            status: document.data().status,\n          };\n          fetchedCandidates.push(fetchedCandidate);\n        });\n        if (\n          currentLoggedUser == null ||\n          currentLoggedUser?.email === \"hrjack@awr.com\"\n        ) {\n          setCandidate(fetchedCandidates);\n        } else {\n          setCandidate(\n            fetchedCandidates.filter(\n              (email) =>\n                email.useremail === currentLoggedUser?.email ||\n                email.interviewer === capUserName\n            )\n          );\n        }\n        setLoading(false);\n      });\n  };\n\n  // Export Candidate status to PDF\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\";\n    const orientation = \"portrait\";\n\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"Canidate Status\";\n    const headers = [\n      [\n        \"CANDIDATE NAME\",\n        \"CANDIDATE EMAIL\",\n        \"APPLIED POSITION\",\n        \"ASSIGNED INTERVIEWER\",\n        \"STATUS\",\n      ],\n    ];\n\n    const data = appliedCandidates.map((elt) => [\n      elt.candidatename.split(\"@\")[0],\n      elt.useremail,\n      elt.title,\n      elt.interviewer,\n      elt.status,\n    ]);\n    let content = {\n      startY: 50,\n      head: headers,\n      body: data,\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"report.pdf\");\n  };\n\n  // Export Candidate Status to CSV\n  const headers = [\n    { label: \"CANDIDATE NAME\", key: \"candidatename\" },\n    { label: \"CANDIDATE EMAIL\", key: \"useremail\" },\n    { label: \"APPLIED POSITION\", key: \"title\" },\n    { label: \"ASSIGNED INTERVIEWER\", key: \"interviewer\" },\n    { label: \"STATUS\", key: \"status\" },\n  ];\n\n  const data = appliedCandidates;\n\n  const prettyLink = {\n    color: \"white\",\n  };\n\n  const appliedCandidatescolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Interviewer</div>\n      ),\n      accessor: \"interviewer\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate Name</div>\n      ),\n      accessor: \"candidatename\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => (\n        <div className=\"text-center h-6\">{row.value.split(\"@\")[0]}</div>\n      ),\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate Email</div>\n      ),\n      accessor: \"useremail\",\n      className: \"font\",\n      width: 230,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Position</div>\n      ),\n      accessor: \"title\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Status</div>,\n      accessor: \"status\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n  ];\n\n  return !loading ? (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex flex-row-reverse bd-highlight allExportButton\">\n        <div className=\"p-2 bd-highlight mr-5\">\n          {userRole === \"hr\" ? (\n            <button\n              className=\"btn btn-info exportPDFBtn\"\n              onClick={() => exportPDF()}\n            >\n              Generate PDF\n            </button>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <div className=\"p-2 bd-highlight\">\n          {userRole === \"hr\" ? (\n            <CSVLink data={data} headers={headers} style={prettyLink}>\n              <button className=\"btn btn-info exportCSVBtn\">\n                Generate CSV\n              </button>\n            </CSVLink>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"d-flex bd-highlight\">\n        <div class=\"d-inline-flex p-2 bd-highlight\">\n          <ReactTable\n            data={appliedCandidates}\n            columns={appliedCandidatescolumns}\n            className=\"-striped -highlight statusCandidateReactTable\"\n            sortable={true}\n            defaultPageSize={5}\n            resizable={false}\n            showPageSizeOptions={false}\n          />\n        </div>\n      </div>\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Candidatestatus;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/functions.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js",["94","95"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js",[],["96","97"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js",["98"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js",["99","100"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js",["101","102","103","104","105"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js",["106","107","108"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { firestore } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Card } from \"react-bootstrap\";\nimport { FcBullish } from \"react-icons/all\";\nimport { Ring } from \"react-spinners-css\";\n\nconst Assigncandidates = () => {\n  const [appliedCandidates, setCandidate] = useState([]);\n  const { currentUser } = useContext(UserContext);\n  const totalInterviewer = [];\n  const notify = () => toast.success(\"Interviewer assigned successfully\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getInterviewer();\n  }, []);\n\n  const getCandidates = (fetchedUsers) => {\n    firestore.collection(\"candidates\").onSnapshot((querySnapshot) => {\n      const fetchedCandidates = [];\n      querySnapshot.docs.map((document) => {\n        const fetchedCandidate = {\n          id: document.id,\n          email: document.data().userEmail,\n          candidateName: document.data().userEmail,\n          openings: document.data().jobAssignTitle,\n          assignedTo: document.data().interviewer,\n          select: (\n            <select onClick={(e) => handleChange(e, document.id)}>\n              {fetchedUsers.length !== 0 &&\n                fetchedUsers.map((data) => (\n                  <option\n                    id=\"selectedValue\"\n                    name=\"selectedValue\"\n                    value={data.name}\n                    selected={document.data().interviewer === data.name}\n                  >\n                    {data.name}\n                  </option>\n                ))}\n            </select>\n          ),\n        };\n        totalInterviewer.push(document.data().interviewer);\n        fetchedCandidates.push(fetchedCandidate);\n      });\n\n      setCandidate(fetchedCandidates);\n\n      setLoading(false);\n    });\n  };\n\n  const getInterviewer = () => {\n    firestore\n      .collection(\"users\")\n      .where(\"role\", \"==\", \"interviewer\")\n      .get()\n      .then((response) => {\n        const fetchedUsers = [];\n        response.docs.forEach((document) => {\n          const fetchedUser = {\n            id: document.id,\n            name: document.data().name,\n            role: document.data().role,\n          };\n          fetchedUsers.push(fetchedUser);\n        });\n        getCandidates(fetchedUsers);\n      });\n  };\n\n  const handleChange = async (e, id) => {\n    firestore\n      .collection(\"candidates\")\n      .doc(id)\n      .update({ interviewer: e.target.value })\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    notify();\n  };\n\n  const appliedCandidatescolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate Name</div>\n      ),\n      accessor: \"candidateName\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => (\n        <div className=\"text-center h-4\">{row.value.split(\"@\")[0]}</div>\n      ),\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate email</div>\n      ),\n      accessor: \"email\",\n      className: \"font\",\n      width: 250,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Applied position</div>\n      ),\n      accessor: \"openings\",\n      className: \"font\",\n      width: 150,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Applied position</div>\n      ),\n      accessor: \"assignedTo\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Assign To</div>\n      ),\n      accessor: \"select\",\n      className: \"font\",\n      width: 150,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n  ];\n\n  return !loading ? (\n    <div className=\"container-fluid\">\n      <div class=\"d-inline-flex p-2 bd-highlight\">\n        <Card className=\"assignedCard\">\n          <Card.Body>\n            <div class=\"d-flex flex-row bd-highlight mb-3\">\n              <div class=\"p-2 bd-highlight\">\n                <div className=\"icon-big text-center icon-warning\">\n                  <FcBullish size={70} />\n                </div>\n              </div>\n              <div class=\"p-2 bd-highlight\">\n                <p></p>\n                <Card.Title as=\"h2\">2</Card.Title>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <div className=\"stats\">\n              <i className=\"fas fa-redo mr-1\"></i>\n              Assigned candidates\n            </div>\n          </Card.Footer>\n        </Card>\n      </div>\n\n      <div class=\"d-inline-flex p-2 bd-highlight\">\n        <ReactTable\n          data={appliedCandidates}\n          columns={appliedCandidatescolumns}\n          sortable={true}\n          defaultPageSize={5}\n          className=\"-striped -highlight assignCandidateReactTable\"\n          resizable={false}\n          showPageSizeOptions={false}\n        />\n        <ToastContainer />\n      </div>\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Assigncandidates;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Dashboard.js",["109"],"import React, { useState, useEffect } from \"react\";\nimport { firestore } from \"../firebase/config\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Card } from \"react-bootstrap\";\nimport { FcBullish } from \"react-icons/all\";\nimport { Ring } from \"react-spinners-css\";\n\nconst Dashboard = () => {\n  const [labelsArray, setlabelsArray] = useState([]);\n  const [dataArray, setdataArray] = useState([]);\n  const [totalJobs, setTotalJob] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getJobsForCandidates();\n  }, []);\n\n  const getJobsForCandidates = async () => {\n    firestore.collection(\"jobs\").onSnapshot((querySnapshot) => {\n      querySnapshot.docs.map((doc) => {\n        var item = doc.data();\n        setlabelsArray((prevState) => [...prevState, item.jobtitle]);\n        setdataArray((prevStatee) => [...prevStatee, item.totalopenings]);\n        setTotalJob((prevState) => prevState + parseInt(item.totalopenings));\n\n        setLoading(false);\n      });\n    });\n  };\n\n  const data = {\n    labels: labelsArray,\n    datasets: [\n      {\n        data: dataArray,\n        backgroundColor: [\n          \"#f44336\",\n          \"#e91e63\",\n          \"#9c27b0\",\n          \"#673ab7\",\n          \"#3f51b5\",\n          \"#2196f3\",\n          \"#03a9f4\",\n          \"#00bcd4\",\n          \"#009688\",\n          \"#4caf50\",\n          \"#8bc34a\",\n          \"#cddc39\",\n          \"#ffeb3b\",\n          \"#ffc107\",\n          \"#ff9800\",\n          \"#ff5722\",\n          \"#795548\",\n          \"#607d8b\",\n        ],\n        hoverBackgroundColor: [\n          \"#f44336\",\n          \"#e91e63\",\n          \"#9c27b0\",\n          \"#673ab7\",\n          \"#3f51b5\",\n          \"#2196f3\",\n          \"#03a9f4\",\n          \"#00bcd4\",\n          \"#009688\",\n          \"#4caf50\",\n          \"#8bc34a\",\n          \"#cddc39\",\n          \"#ffeb3b\",\n          \"#ffc107\",\n          \"#ff9800\",\n          \"#ff5722\",\n          \"#795548\",\n          \"#607d8b\",\n        ],\n      },\n    ],\n  };\n\n  return !loading ? (\n    <div className=\"container-fluid\">\n      <div className=\"d-inline-flex p-2 bd-highlight jobsPieChart\">\n        <Pie\n          data={data}\n          options={{\n            responsive: true,\n            maintainAspectRatio: true,\n          }}\n        />\n      </div>\n\n      <div className=\"d-inline-flex p-2 bd-highlight\">\n        <Card className=\"totalJobDashboardCard\">\n          <Card.Body>\n            <div className=\"d-flex flex-row bd-highlight mb-3\">\n              <div className=\"p-2 bd-highlight\">\n                <div className=\"icon-big text-center icon-warning\">\n                  <FcBullish size={70} />\n                </div>\n              </div>\n              <div className=\"p-2 bd-highlight\">\n                <p></p>\n                <Card.Title as=\"h2\">{totalJobs}</Card.Title>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <div className=\"stats\">\n              <i className=\"fas fa-redo mr-1\"></i>\n              Total Job openings\n            </div>\n          </Card.Footer>\n        </Card>\n      </div>\n\n      <div className=\"d-inline-flex p-2 bd-highlight dashboardCard\">\n        <Card className=\"totalJobDashboardCard\">\n          <Card.Body>\n            <div className=\"d-flex flex-row bd-highlight mb-3\">\n              <div className=\"p-2 bd-highlight\">\n                <div className=\"icon-big text-center icon-warning\">\n                  <FcBullish size={70} />\n                </div>\n              </div>\n              <div className=\"p-2 bd-highlight\">\n                <p></p>\n                <Card.Title as=\"h2\">2</Card.Title>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <div className=\"stats\">\n              <i className=\"fas fa-redo mr-1\"></i>\n              Assigned candidates\n            </div>\n          </Card.Footer>\n        </Card>\n      </div>\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Dashboard;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js",["110","111","112","113"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":60,"column":36,"nodeType":"120","messageId":"121","endLine":60,"endColumn":38},{"ruleId":"122","severity":1,"message":"123","line":79,"column":6,"nodeType":"124","endLine":79,"endColumn":8,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":21,"column":6,"nodeType":"124","endLine":21,"endColumn":8,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"119","line":39,"column":43,"nodeType":"120","messageId":"121","endLine":39,"endColumn":45},{"ruleId":"128","severity":1,"message":"129","line":8,"column":3,"nodeType":"130","messageId":"131","endLine":8,"endColumn":13},{"ruleId":"122","severity":1,"message":"132","line":34,"column":6,"nodeType":"124","endLine":34,"endColumn":8,"suggestions":"133"},{"ruleId":"114","replacedBy":"134"},{"ruleId":"116","replacedBy":"135"},{"ruleId":"128","severity":1,"message":"136","line":9,"column":7,"nodeType":"130","messageId":"131","endLine":9,"endColumn":15},{"ruleId":"122","severity":1,"message":"137","line":18,"column":6,"nodeType":"124","endLine":18,"endColumn":8,"suggestions":"138"},{"ruleId":"118","severity":1,"message":"119","line":23,"column":41,"nodeType":"120","messageId":"121","endLine":23,"endColumn":43},{"ruleId":"128","severity":1,"message":"139","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":27},{"ruleId":"128","severity":1,"message":"140","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":21},{"ruleId":"128","severity":1,"message":"141","line":13,"column":10,"nodeType":"130","messageId":"131","endLine":13,"endColumn":14},{"ruleId":"122","severity":1,"message":"142","line":22,"column":6,"nodeType":"124","endLine":22,"endColumn":8,"suggestions":"143"},{"ruleId":"118","severity":1,"message":"119","line":29,"column":43,"nodeType":"120","messageId":"121","endLine":29,"endColumn":45},{"ruleId":"128","severity":1,"message":"144","line":13,"column":11,"nodeType":"130","messageId":"131","endLine":13,"endColumn":22},{"ruleId":"122","severity":1,"message":"145","line":20,"column":6,"nodeType":"124","endLine":20,"endColumn":8,"suggestions":"146"},{"ruleId":"118","severity":1,"message":"119","line":25,"column":41,"nodeType":"120","messageId":"121","endLine":25,"endColumn":43},{"ruleId":"118","severity":1,"message":"119","line":20,"column":36,"nodeType":"120","messageId":"121","endLine":20,"endColumn":38},{"ruleId":"128","severity":1,"message":"147","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"148","line":3,"column":16,"nodeType":"130","messageId":"131","endLine":3,"endColumn":25},{"ruleId":"128","severity":1,"message":"149","line":8,"column":11,"nodeType":"130","messageId":"131","endLine":8,"endColumn":25},{"ruleId":"128","severity":1,"message":"150","line":9,"column":9,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has missing dependencies: 'getCandidates' and 'getUserRole'. Either include them or remove the dependency array.",["154"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getUserRole'. Either include it or remove the dependency array.",["155"],["151"],["152"],"'userRole' is defined but never used.","React Hook useEffect has a missing dependency: 'getCandidates'. Either include it or remove the dependency array.",["156"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'role' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getJobsForCandidates'. Either include it or remove the dependency array.",["157"],"'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInterviewer'. Either include it or remove the dependency array.",["158"],"'auth' is defined but never used.","'firestore' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [handleDelete]",{"range":"171","text":"172"},"Update the dependencies array to be: [getCandidates, getUserRole]",{"range":"173","text":"174"},"Update the dependencies array to be: [getUserRole]",{"range":"175","text":"176"},"Update the dependencies array to be: [getCandidates]",{"range":"177","text":"178"},"Update the dependencies array to be: [getJobsForCandidates]",{"range":"179","text":"180"},"Update the dependencies array to be: [getInterviewer]",{"range":"181","text":"182"},[2503,2505],"[handleDelete]",[755,757],"[getCandidates, getUserRole]",[1193,1195],"[getUserRole]",[725,727],"[getCandidates]",[829,831],"[getJobsForCandidates]",[778,780],"[getInterviewer]"]