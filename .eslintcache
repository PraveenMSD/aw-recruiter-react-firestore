[{"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js":"1","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js":"2","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js":"3","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js":"4","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/functions.js":"5","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js":"6","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js":"7","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js":"8","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js":"9","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js":"10","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js":"11","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js":"12","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js":"13","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js":"14","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js":"15","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js":"16","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Dashboard.js":"17","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js":"18","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js":"19","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js":"20","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/shared/Interviewercount.js":"21"},{"size":744,"mtime":1615892344869,"results":"22","hashOfConfig":"23"},{"size":7524,"mtime":1615912504970,"results":"24","hashOfConfig":"23"},{"size":6081,"mtime":1615956470771,"results":"25","hashOfConfig":"23"},{"size":658,"mtime":1615889234666,"results":"26","hashOfConfig":"23"},{"size":258,"mtime":1615889234686,"results":"27","hashOfConfig":"23"},{"size":3766,"mtime":1615898831282,"results":"28","hashOfConfig":"23"},{"size":295,"mtime":1615889234706,"results":"29","hashOfConfig":"23"},{"size":2494,"mtime":1615898357882,"results":"30","hashOfConfig":"23"},{"size":4633,"mtime":1615956497115,"results":"31","hashOfConfig":"23"},{"size":6872,"mtime":1615893166029,"results":"32","hashOfConfig":"23"},{"size":7218,"mtime":1615893630993,"results":"33","hashOfConfig":"23"},{"size":358,"mtime":1615868903751,"results":"34","hashOfConfig":"23"},{"size":120,"mtime":1615889203906,"results":"35","hashOfConfig":"23"},{"size":5587,"mtime":1615963351985,"results":"36","hashOfConfig":"23"},{"size":5187,"mtime":1615893499816,"results":"37","hashOfConfig":"23"},{"size":135,"mtime":1615889204822,"results":"38","hashOfConfig":"23"},{"size":4065,"mtime":1615962760537,"results":"39","hashOfConfig":"23"},{"size":329,"mtime":1615889205906,"results":"40","hashOfConfig":"23"},{"size":2906,"mtime":1615898377111,"results":"41","hashOfConfig":"23"},{"size":700,"mtime":1615961867274,"results":"42","hashOfConfig":"23"},{"size":622,"mtime":1615963005026,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"uba3kd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js",[],["96","97"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js",["98","99"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { firestore } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Ring } from \"react-spinners-css\";\n\nconst Recruiter = () => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [jobsDetails, setJobDetails] = useState([]);\n  let [jobtitle, setJobTitle] = useState(\"\");\n  let [totalopenings, setTotalOpenings] = useState(\"\");\n  let [jobstatus, setJobStatus] = useState(\"\");\n  let [entrylevel, setEntryLevel] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const offersRef = firestore.collection(\"jobs\");\n\n  const handleSubmit = (e, jobtitle, totalopenings, jobstatus, entrylevel) => {\n    e.preventDefault();\n    if (jobtitle === \"\") {\n      toast.error(\"Job title cannot be empty\");\n    } else if (totalopenings === \"\") {\n      toast.error(\"Total openings cannot be empty\");\n    } else if (jobstatus === \"\") {\n      toast.error(\"Please choose job status\");\n    } else if (entrylevel === \"\") {\n      toast.error(\"Please choose entry level\");\n    } else {\n      firestore\n        .collection(\"jobs\")\n        .doc()\n        .set({ jobtitle, totalopenings, jobstatus, entrylevel })\n        .then(() => handleClose())\n        .catch((err) => {\n          console.log(err);\n        });\n      toast.success(\"Jobs added successfully\");\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.id === \"jobtitle-create\") {\n      setJobTitle(e.target.value);\n    } else if (e.target.id === \"totalopenings-create\") {\n      setTotalOpenings(parseInt(e.target.value));\n    } else if (e.target.id === \"entrylevel-create\") {\n      setEntryLevel(e.target.value);\n      setJobStatus(\"Active\");\n    }\n  };\n\n  useEffect(() => {\n    firestore.collection(\"jobs\").onSnapshot((querySnapshot) => {\n      var data = [];\n      querySnapshot.docs.map((doc) => {\n        var view = (\n          <div className=\"text-center h-4\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={() => handleDelete(doc.id)}\n            >\n              Delete\n            </button>\n          </div>\n        );\n\n        data.push({ ...doc.data(), id: doc.id, view });\n        setJobDetails([...data]);\n\n        setLoading(false);\n      });\n    });\n  }, []);\n  const handleDelete = (id) => {\n    offersRef.doc(id).delete();\n    toast.warn(\"Job deleted successfully\");\n  };\n\n  const BootstrapModal = () => (\n    <>\n      <div className=\"d-flex bd-highlight\">\n        <div className=\"ml-auto p-2 bd-highlight addJobBtn\">\n          <Button className=\"addJobBtn\" variant=\"primary\" onClick={handleShow}>\n            Add job\n          </Button>\n        </div>\n      </div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Job</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form\n            onSubmit={(e) => {\n              handleSubmit(e, jobtitle, totalopenings, jobstatus, entrylevel);\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"jobtitle-create\">Job Title</label>\n              <input\n                onChange={handleChange}\n                className=\"form-control\"\n                type=\"text\"\n                id=\"jobtitle-create\"\n                name=\"jobtitle-create\"\n                placeholder=\"Enter Job Title\"\n                required={true}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"totalopenings-create\">Total Openings</label>\n              <input\n                onChange={handleChange}\n                className=\"form-control\"\n                type=\"number\"\n                id=\"totalopenings-create\"\n                name=\"totalopenings-create\"\n                placeholder=\"Enter Total Openings\"\n                required={true}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"entrylevel-create\">Entry Level</label>\n\n              <select\n                className=\"form-control\"\n                type=\"text\"\n                id=\"entrylevel-create\"\n                name=\"entrylevel-create\"\n                onClick={(e) => handleChange(e)}\n              >\n                <option\n                  id=\"selectedValue\"\n                  name=\"selectedValue\"\n                  value=\"\"\n                >\n                  Please select...\n                </option>\n                <option id=\"selectedValue\" name=\"selectedValue\" value=\"Fresher\">\n                  Fresher\n                </option>\n                <option\n                  id=\"selectedValue\"\n                  name=\"selectedValue\"\n                  value=\"Experience\"\n                >\n                  Experience\n                </option>\n              </select>\n            </div>\n            <div className=\"form-group text-center\">\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>{\" \"}\n              &nbsp;\n              <button className=\"btn btn-success\" type=\"submit\">\n                Create\n              </button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n\n  const jobDetailsTablecolumns = [\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Job ID</div>,\n      accessor: \"id\",\n      className: \"font\",\n      width: 250,\n      show: false,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Title</div>\n      ),\n      accessor: \"jobtitle\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Total Openings</div>\n      ),\n      accessor: \"totalopenings\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Status</div>\n      ),\n      accessor: \"jobstatus\",\n      className: \"px-4 py-3 text-sm\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Entry Level</div>\n      ),\n      accessor: \"entrylevel\",\n      filterable: false,\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Action</div>,\n      accessor: \"view\",\n      filterable: false,\n      width: 200,\n      // Cell: row => {row.value}\n    },\n  ];\n\n  return !loading ? (\n    <>\n      {BootstrapModal()}\n      <div className=\"container text-center\">\n        <ReactTable\n          data={jobsDetails}\n          columns={jobDetailsTablecolumns}\n          className=\"-striped -highlight ReactTable\"\n          sortable={true}\n          defaultPageSize={5}\n          resizable={false}\n          showPageSizeOptions={false}\n        />\n      </div>\n      <ToastContainer />\n    </>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Recruiter;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js",["100","101"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js",[],["102","103"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/functions.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js",["104","105"],"import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  useHistory,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Admin from \"./components/Admin\";\nimport Interviewer from \"./components/Interviewer\";\nimport Recruiter from \"./components/Recruiter\";\nimport Assigncandidates from \"./components/Assigncandidates\";\nimport Candidates from \"./components/Candidates\";\nimport Candidatestatus from \"./components/Candidatestatus\";\nimport { UserContext } from \"./providers/UserProvider\";\nimport { UserProvider } from \"./providers/UserProvider\";\nimport { auth, firestore } from \"./firebase/config\";\nimport Dashboard from \"./components/Dashboard\";\nimport Profile from \"./components/Profile\";\nimport Home from \"./components/Home\";\n\nfunction App(props) {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n\n  useEffect(() => {\n    getUserRole();\n  }, []);\n\n  const getUserRole = () => {\n    auth.onAuthStateChanged((user) => {\n      firestore\n        .collection(\"users\")\n        .doc(user.uid)\n        .onSnapshot((querySnapshot) => {\n          setCurrentUser({\n            name: querySnapshot.data().name,\n            userRole: querySnapshot.data().role,\n          });\n        });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <UserProvider>\n          <Header />\n          <br />\n          <br />\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/home\" component={Home} />\n          {/* <Route exact path=\"/dashboard\" render={() => (currentUser?.userRole === \"hr\" ? (<Dashboard />) : (<Redirect to=\"/profile\" />))} /> */}\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route\n            exact\n            path=\"/recruiter\"\n            render={() =>\n              currentUser?.userRole === \"hr\" ? (\n                <Recruiter />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/interviewer\"\n            render={() =>\n              currentUser?.userRole === \"interviewer\" || \"hr\" ? (\n                <Interviewer />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/candidates\"\n            render={() =>\n              currentUser?.userRole === \"candidate\" || \"hr\" ? (\n                <Candidates />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/candidatestatus\"\n            render={() =>\n              currentUser?.userRole === \"candidate\" || \"hr\" ? (\n                <Candidatestatus />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/assigncandidates\"\n            render={() =>\n              currentUser?.userRole === \"hr\" ? (\n                <Assigncandidates />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route exact path=\"/profile\" component={Profile} />\n          <div className=\"footer\">\n            <Footer />\n          </div>\n        </UserProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n",["106","107"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js",["108"],"import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { auth, firestore } from \"../firebase/config\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const history = useHistory();\n  var userRole;\n\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e, email, password) => {\n    e.preventDefault();\n\n    auth.signInWithEmailAndPassword(email, password).then((userAuth) => {\n      firestore\n        .collection(\"users\")\n        .doc(userAuth.user.uid)\n        .onSnapshot((querySnapshot) => {\n          setCurrentUser({\n            ...currentUser,\n            name: querySnapshot.data().name,\n            userRole: querySnapshot.data().role,\n          });\n          if (querySnapshot.data().role === \"hr\") {\n            history.push(\"/dashboard\");\n          } else if (querySnapshot.data().role === \"interviewer\") {\n            history.push(\"/interviewer\");\n          } else if (querySnapshot.data().role === \"candidate\") {\n            history.push(\"/candidates\");\n          }\n        });\n    });\n  };\n\n  const handleChange = (e) => {\n    if (e.target.id === \"email-login\") {\n      setEmail(e.target.value)\n    } else {\n      setPassword(e.target.value)\n    }\n  };\n\n  return (\n    <div className=\"shadow p-3 mb-5 bg-white rounded loginsignup-form\">\n      <h1 className=\"text-center\">Log in</h1>\n      <form onSubmit={(e) => handleSubmit(e, email, password)}>\n        <div className=\"form-group mt-4\">\n          <input\n            onChange={handleChange}\n            className=\"form-control\"\n            type=\"email\"\n            name=\"email-login\"\n            id=\"email-login\"\n            placeholder=\"Enter Your Email\"\n          />\n        </div>\n        <div className=\"form-group mt-4\">\n          <input\n            onChange={handleChange}\n            className=\"form-control\"\n            type=\"password\"\n            name=\"password-login\"\n            id=\"password-login\"\n            placeholder=\"Enter Your Password\"\n          />\n        </div>\n        <div className=\"form-group mt-4\">\n          <button className=\"btn btn-primary\">Login</button>\n        </div>\n        <div className=\"form-group\">\n          <h6>\n            No account?\n            <Link to=\"/signup\"> Create one</Link>\n          </h6>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js",["109","110"],"import React, { useState, useEffect } from \"react\";\nimport { auth, firestore } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { Ring } from \"react-spinners-css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Interviewer = () => {\n  const [appliedCandidates, setCandidate] = useState([]);\n  const currentLoggedUser = auth.currentUser;\n  const userName = currentLoggedUser?.email.split(\"@\")[0];\n  const capUserName = userName?.charAt(0).toUpperCase() + userName?.slice(1);\n  const [loading, setLoading] = useState(true);\n  const statusnotify = () => toast.success(\"Result updated successfully\");\n\n  useEffect(() => {\n    getCandidates();\n  }, []);\n\n  const getCandidates = () => {\n    firestore.collection(\"candidates\").onSnapshot((querySnapshot) => {\n      const fetchedCandidates = [];\n      querySnapshot.docs.map((document) => {\n        const fetchedCandidate = {\n          id: document.id,\n          interviewer: document.data().interviewer,\n          title: document.data().jobAssignTitle,\n          useremail: document.data().userEmail,\n          selectedstatus: document.data().status,\n          select: (\n            <div className=\"text-center h-6\">\n              <select onChange={(e) => handleChange(e, document.id)}>\n                <option\n                  id=\"selectedValue\"\n                  name=\"selectedValue\"\n                  value=\"Please select\"\n                >\n                  Please select...\n                </option>\n                <option\n                  id=\"selectedValue\"\n                  name=\"selectedValue\"\n                  value=\"Selected\"\n                >\n                  Selected\n                </option>\n                <option\n                  id=\"selectedValue\"\n                  name=\"selectedValue\"\n                  value=\"Rejected\"\n                >\n                  Rejected\n                </option>\n                <option id=\"selectedValue\" name=\"selectedValue\" value=\"On-Hold\">\n                  On-Hold\n                </option>\n              </select>\n            </div>\n          ),\n        };\n        fetchedCandidates.push(fetchedCandidate);\n      });\n      setCandidate(fetchedCandidates);\n      setCandidate(\n        fetchedCandidates.filter((int) => int.interviewer === capUserName)\n      );\n      setLoading(false);\n    });\n  };\n\n  const handleChange = async (e, id) => {\n    if (e.target.value === \"Please select\") {\n      return;\n    }\n    firestore\n      .collection(\"candidates\")\n      .doc(id)\n      .update({ status: e.target.value })\n      .then((data) => {\n        console.log(e.target.value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    statusnotify();\n  };\n\n  const appliedCandidatescolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Interviewer</div>\n      ),\n      accessor: \"interviewer\",\n      className: \"font\",\n      width: 160,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate</div>\n      ),\n      accessor: \"useremail\",\n      className: \"font\",\n      width: 160,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Position</div>\n      ),\n      accessor: \"title\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Status</div>,\n      accessor: \"selectedstatus\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => (\n        <div\n          className=\"text-center h-6\"\n          style={{ color: row.value === \"Selected\" ? \"green\" : \"red\"}}\n        >\n          {row.value}\n        </div>\n      ),\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Set Status</div>\n      ),\n      accessor: \"select\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n  ];\n\n  return !loading ? (\n    <div>\n      <ReactTable\n        data={appliedCandidates}\n        columns={appliedCandidatescolumns}\n        className=\"interviewerReactTable\"\n        sortable={true}\n        defaultPageSize={5}\n        resizable={false}\n        showPageSizeOptions={false}\n      />\n      <ToastContainer />\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Interviewer;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js",["111","112","113","114","115"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, firestore } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Card } from \"react-bootstrap\";\nimport { FcBullish, BsFillHeartFill } from \"react-icons/all\";\nimport { Ring } from \"react-spinners-css\";\n\nconst Candidates = () => {\n  const [jobs, setJobs] = useState([]);\n  const [role, getRole] = useState(\"\");\n  const currentLoggedUser = auth.currentUser;\n  var userEmail = currentLoggedUser?.email || \"\";\n  const [totalJobs, setTotalJob] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUserRole();\n    getJobsForCandidates();\n  }, []);\n\n  const getJobsForCandidates = () => {\n    firestore\n      .collection(\"jobs\")\n      .onSnapshot((querySnapshot) => {\n        const fetchedJobs = [];\n        querySnapshot.docs.map((document) => {\n          const fetchedJob = {\n            id: document.id,\n            jobAssignTitle: document.data().jobtitle,\n            openings: document.data().totalopenings,\n            status: document.data().jobstatus,\n            level: document.data().entrylevel,\n            appliedemails: document.data().appliedemails,\n            apply:\n              document.data().appliedemails === currentLoggedUser?.email ? (\n                \"Applied\"\n              ) : (\n                <button\n                  className=\"btn btn-success\"\n                  id={document.data().jobtitle}\n                  onClick={(e) =>\n                    handleSubmit(\n                      e,\n                      userEmail,\n                      document.data().jobtitle,\n                      document.id,\n                      document.data().totalopenings,\n                      document.data().appliedemails\n                    )\n                  }\n                >\n                  Apply\n                </button>\n              ),\n          };\n          setTotalJob(\n            (prevState) => prevState + parseInt(document.data().totalopenings)\n          );\n          fetchedJobs.push(fetchedJob);\n        });\n        setJobs(fetchedJobs.filter((open) => open.openings > 0));\n\n        setLoading(false);\n      });\n  };\n\n  const getUserRole = () => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        firestore\n          .collection(\"users\")\n          .doc(user.uid)\n          .onSnapshot((querySnapshot) => {\n            getRole(querySnapshot.data().role);\n          });\n      }\n    });\n  };\n\n  const decrementJobOpeningOnApply = (jobId, openingss, userEmail) => {\n    firestore\n      .collection(\"jobs\")\n      .doc(jobId)\n      .update({\n        totalopenings: parseInt(openingss - 1),\n        appliedemails: userEmail,\n      });\n  };\n\n  const handleSubmit = (e, userEmail, jobAssignTitle, jobId, openingss) => {\n    e.preventDefault();\n    document.getElementById(jobAssignTitle).disabled = true;\n\n    decrementJobOpeningOnApply(jobId, openingss, userEmail);\n\n    firestore\n      .collection(\"candidates\")\n      .doc()\n      .set({ userEmail, jobAssignTitle })\n      .catch((err) => {\n        console.log(err);\n      });\n    toast.success(\"Applied successfully\");\n  };\n\n  const jobDetailsTablecolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Title</div>\n      ),\n      accessor: \"jobAssignTitle\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Total Openings</div>\n      ),\n      accessor: \"openings\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Status</div>\n      ),\n      accessor: \"status\",\n      className: \"px-4 py-3 text-sm\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Entry Level</div>\n      ),\n      accessor: \"level\",\n      filterable: false,\n      width: 250,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Apply</div>,\n      accessor: \"apply\",\n      filterable: false,\n      width: 100,\n    },\n  ];\n\n  return !loading ? (\n    <div>\n      <div className=\"container-fluid\">\n        <div className=\"d-inline-flex p-2 bd-highlight\">\n          <Card className=\"candidatesVacanyCard\">\n            <Card.Body>\n              <div className=\"d-flex flex-row bd-highlight mb-3\">\n                <div className=\"p-2 bd-highlight\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <FcBullish size={70} />\n                  </div>\n                </div>\n                <div className=\"p-2 bd-highlight\">\n                  <p></p>\n                  <Card.Title as=\"h2\">{totalJobs}</Card.Title>\n                </div>\n              </div>\n            </Card.Body>\n            <Card.Footer>\n              <div className=\"stats\">\n                <i className=\"fas fa-redo mr-1\"></i>\n                Total Job openings\n              </div>\n            </Card.Footer>\n          </Card>\n        </div>\n\n        <div className=\"d-inline-flex p-2 bd-highlight\">\n          <Card className=\"candidatesClientCard\">\n            <Card.Body>\n              <div className=\"d-flex flex-row bd-highlight mb-3\">\n                <div className=\"p-2 bd-highlight\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <BsFillHeartFill size={70} />\n                  </div>\n                </div>\n                <div className=\"p-2 bd-highlight\">\n                  <p></p>\n                  <Card.Title as=\"h4\">10K+</Card.Title>\n                </div>\n              </div>\n            </Card.Body>\n            <Card.Footer>\n              <div className=\"stats\">\n                <i className=\"fas fa-redo mr-1\"></i>\n                Satisfied clients\n              </div>\n            </Card.Footer>\n          </Card>\n        </div>\n\n        <div className=\"d-inline-flex p-2 bd-highlight\">\n          <ReactTable\n            data={jobs}\n            columns={jobDetailsTablecolumns}\n            className=\"-striped -highlight candidateReactTable\"\n            sortable={true}\n            defaultPageSize={5}\n            resizable={false}\n            showPageSizeOptions={false}\n          />\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Candidates;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js",["116","117","118"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Dashboard.js",["119"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js",["120","121","122","123"],"import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { auth, firestore } from \"../firebase/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst SignUp = () => {\n  const { setCurrentUser } = useContext(UserContext);\n  const history = useHistory();\n\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e, name, email, password) => {\n    e.preventDefault();\n    // auth.createUserWithEmailAndPassword(email, password).then(userAuth => {\n    // \tfirestore.collection('users').doc(userAuth.user.uid).set({ name })\n    // \t\t.then(() => {\n    // \t\t\tsetCurrentUser({ name, email })\n    // \t\t\thistory.push(\"/profile\")\n    // \t\t})\n    // })\n    toast.warning(\n      \"Please contact admin to create user with roles. Write to 'praveenrk189@gmail.com'\"\n    );\n    // alert(\"Please contact admin to create user with roles. Write to 'praveenrk189@gmail.com'\")\n  };\n\n  const handleChange = (e) => {\n    if (e.target.id === \"name-sign-up\") {\n      setName(e.target.value);\n    } else if (e.target.id === \"email-sign-up\") {\n      setEmail(e.target.value);\n    } else {\n      setPassword(e.target.value);\n    }\n  };\n\n  return (\n    <div className=\"component\">\n      <div className=\"shadow p-3 mb-5 bg-white rounded loginsignup-form\">\n        <h1 className=\"text-center\">Sign up</h1>\n        <form onSubmit={(e) => handleSubmit(e, name, email, password)}>\n          <div className=\"form-group my-4\">\n            <input\n              onChange={handleChange}\n              className=\"form-control\"\n              type=\"text\"\n              id=\"name-sign-up\"\n              name=\"name-sign-up\"\n              placeholder=\"Enter Your Name\"\n            />\n          </div>\n          <div className=\"form-group mt-4\">\n            <input\n              onChange={handleChange}\n              className=\"form-control\"\n              type=\"email\"\n              id=\"email-sign-up\"\n              name=\"email-sign-up\"\n              placeholder=\"Enter Your Email\"\n            />\n          </div>\n          <div className=\"form-group mt-4\">\n            <input\n              onChange={handleChange}\n              className=\"form-control\"\n              type=\"password\"\n              id=\"password-sign-up\"\n              name=\"password-sign-up\"\n              placeholder=\"Enter Your Password\"\n            />\n          </div>\n          <div className=\"form-group mt-4\">\n            <button className=\"btn btn-success\">Sign up</button>\n          </div>\n          <div className=\"form-group\">\n            <h6>\n              Already have account?\n              <Link to=\"/\"> Sign in</Link>\n            </h6>\n          </div>\n        </form>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default SignUp;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js",["124","125","126"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/shared/Interviewercount.js",["127","128"],"import React, { useState, useEffect } from \"react\";\nimport { firestore } from \"../firebase/config\";\n\nconst Interviewercount = () => {\n  const [intervwrCount, setintervwrCount] = useState(\"\");\n\n  useEffect(() => {\n    getInt();\n  }, []);\n\n  const getInt = () => {\n    firestore.collection(\"candidates\").onSnapshot((querySnapshot) => {\n      var count = [];\n      querySnapshot.docs.map((doc) => {\n        if (doc.data().interviewer !== \"\") {\n          count.push(doc.data().interviewer);\n        }\n        setintervwrCount(count.length);\n      });\n    });\n  };\n\n  return intervwrCount;\n};\n\nexport default Interviewercount;\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":60,"column":36,"nodeType":"135","messageId":"136","endLine":60,"endColumn":38},{"ruleId":"137","severity":1,"message":"138","line":79,"column":6,"nodeType":"139","endLine":79,"endColumn":8,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":21,"column":6,"nodeType":"139","endLine":21,"endColumn":8,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"134","line":37,"column":41,"nodeType":"135","messageId":"136","endLine":37,"endColumn":43},{"ruleId":"129","replacedBy":"143"},{"ruleId":"131","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":8,"column":3,"nodeType":"147","messageId":"148","endLine":8,"endColumn":13},{"ruleId":"137","severity":1,"message":"149","line":33,"column":6,"nodeType":"139","endLine":33,"endColumn":8,"suggestions":"150"},{"ruleId":"129","replacedBy":"151"},{"ruleId":"131","replacedBy":"152"},{"ruleId":"145","severity":1,"message":"153","line":9,"column":7,"nodeType":"147","messageId":"148","endLine":9,"endColumn":15},{"ruleId":"137","severity":1,"message":"154","line":18,"column":6,"nodeType":"139","endLine":18,"endColumn":8,"suggestions":"155"},{"ruleId":"133","severity":1,"message":"134","line":23,"column":41,"nodeType":"135","messageId":"136","endLine":23,"endColumn":43},{"ruleId":"145","severity":1,"message":"156","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":27},{"ruleId":"145","severity":1,"message":"157","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":21},{"ruleId":"145","severity":1,"message":"158","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":14},{"ruleId":"137","severity":1,"message":"159","line":22,"column":6,"nodeType":"139","endLine":22,"endColumn":8,"suggestions":"160"},{"ruleId":"133","severity":1,"message":"134","line":29,"column":43,"nodeType":"135","messageId":"136","endLine":29,"endColumn":45},{"ruleId":"145","severity":1,"message":"161","line":14,"column":11,"nodeType":"147","messageId":"148","endLine":14,"endColumn":22},{"ruleId":"137","severity":1,"message":"162","line":21,"column":6,"nodeType":"139","endLine":21,"endColumn":8,"suggestions":"163"},{"ruleId":"133","severity":1,"message":"134","line":26,"column":41,"nodeType":"135","messageId":"136","endLine":26,"endColumn":43},{"ruleId":"133","severity":1,"message":"134","line":21,"column":36,"nodeType":"135","messageId":"136","endLine":21,"endColumn":38},{"ruleId":"145","severity":1,"message":"164","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"145","severity":1,"message":"165","line":3,"column":16,"nodeType":"147","messageId":"148","endLine":3,"endColumn":25},{"ruleId":"145","severity":1,"message":"166","line":8,"column":11,"nodeType":"147","messageId":"148","endLine":8,"endColumn":25},{"ruleId":"145","severity":1,"message":"167","line":9,"column":9,"nodeType":"147","messageId":"148","endLine":9,"endColumn":16},{"ruleId":"145","severity":1,"message":"168","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"169","line":1,"column":28,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"165","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":19},{"ruleId":"145","severity":1,"message":"170","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":14,"column":36,"nodeType":"135","messageId":"136","endLine":14,"endColumn":38},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has missing dependencies: 'getCandidates' and 'getUserRole'. Either include them or remove the dependency array.",["174"],["171"],["172"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getUserRole'. Either include it or remove the dependency array.",["175"],["171"],["172"],"'userRole' is defined but never used.","React Hook useEffect has a missing dependency: 'getCandidates'. Either include it or remove the dependency array.",["176"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'role' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getJobsForCandidates'. Either include it or remove the dependency array.",["177"],"'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInterviewer'. Either include it or remove the dependency array.",["178"],"'auth' is defined but never used.","'firestore' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [handleDelete]",{"range":"191","text":"192"},"Update the dependencies array to be: [getCandidates, getUserRole]",{"range":"193","text":"194"},"Update the dependencies array to be: [getUserRole]",{"range":"195","text":"196"},"Update the dependencies array to be: [getCandidates]",{"range":"197","text":"198"},"Update the dependencies array to be: [getJobsForCandidates]",{"range":"199","text":"200"},"Update the dependencies array to be: [getInterviewer]",{"range":"201","text":"202"},[2503,2505],"[handleDelete]",[755,757],"[getCandidates, getUserRole]",[1159,1161],"[getUserRole]",[725,727],"[getCandidates]",[829,831],"[getJobsForCandidates]",[837,839],"[getInterviewer]"]