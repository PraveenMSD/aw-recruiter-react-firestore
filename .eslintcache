[{"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js":"1","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js":"2","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js":"3","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js":"4","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/functions.js":"5","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js":"6","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js":"7","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js":"8","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js":"9","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js":"10","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js":"11","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js":"12","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js":"13","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js":"14","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js":"15","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js":"16","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Dashboard.js":"17","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js":"18","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js":"19","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js":"20"},{"size":744,"mtime":1615892344869,"results":"21","hashOfConfig":"22"},{"size":6325,"mtime":1615881403259,"results":"23","hashOfConfig":"22"},{"size":6032,"mtime":1615890862478,"results":"24","hashOfConfig":"22"},{"size":658,"mtime":1615889234666,"results":"25","hashOfConfig":"22"},{"size":235,"mtime":1615456987153,"results":"26","hashOfConfig":"22"},{"size":3853,"mtime":1615892307913,"results":"27","hashOfConfig":"22"},{"size":296,"mtime":1615539205145,"results":"28","hashOfConfig":"22"},{"size":2492,"mtime":1615891346560,"results":"29","hashOfConfig":"22"},{"size":5118,"mtime":1615890084281,"results":"30","hashOfConfig":"22"},{"size":7174,"mtime":1615891664669,"results":"31","hashOfConfig":"22"},{"size":7331,"mtime":1615891779927,"results":"32","hashOfConfig":"22"},{"size":358,"mtime":1615868903751,"results":"33","hashOfConfig":"22"},{"size":120,"mtime":1615889203906,"results":"34","hashOfConfig":"22"},{"size":5615,"mtime":1615890496816,"results":"35","hashOfConfig":"22"},{"size":5234,"mtime":1615892047246,"results":"36","hashOfConfig":"22"},{"size":135,"mtime":1615889204822,"results":"37","hashOfConfig":"22"},{"size":4601,"mtime":1615891996241,"results":"38","hashOfConfig":"22"},{"size":325,"mtime":1615867426907,"results":"39","hashOfConfig":"22"},{"size":2367,"mtime":1615881310967,"results":"40","hashOfConfig":"22"},{"size":515,"mtime":1615892450362,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uba3kd",{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js",["92","93","94","95","96"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js",["97","98","99","100"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { firestore, auth } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { Ring } from \"react-spinners-css\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { CSVLink } from \"react-csv\";\n\nconst Candidatestatus = () => {\n  const [appliedCandidates, setCandidate] = useState([]);\n  const currentLoggedUser = auth.currentUser;\n  const userName = currentLoggedUser?.email.split(\"@\")[0];\n  const capUserName = userName?.charAt(0).toUpperCase() + userName?.slice(1);\n  const [loading, setLoading] = useState(true);\n  const [userRole, setuserRole] = useState(\"\");\n\n  useEffect(() => {\n    getCandidates();\n    getUserRole();\n  }, []);\n\n  const getUserRole = () => {\n    firestore\n      .collection(\"users\")\n      .doc(currentLoggedUser?.uid)\n      .onSnapshot((querySnapshot) => {\n        setuserRole(querySnapshot.data()?.role);\n      });\n  };\n\n  console.log(userRole)\n\n  const getCandidates = () => {\n    firestore\n      .collection(\"candidates\")\n      .onSnapshot((querySnapshot) => {\n        const fetchedCandidates = [];\n        querySnapshot.docs.map((document) => {\n          const fetchedCandidate = {\n            id: document.id,\n            interviewer: document.data().interviewer,\n            title: document.data().jobAssignTitle,\n            useremail: document.data().userEmail,\n            candidatename: document.data().userEmail,\n            status: document.data().status,\n          };\n          fetchedCandidates.push(fetchedCandidate);\n        });\n        if (\n          currentLoggedUser == null ||\n          currentLoggedUser?.email === \"hrjack@awr.com\"\n        ) {\n          setCandidate(fetchedCandidates);\n        } else {\n          setCandidate(\n            fetchedCandidates.filter(\n              (email) =>\n                email.useremail === currentLoggedUser?.email ||\n                email.interviewer == capUserName\n            )\n          );\n        }\n        setLoading(false);\n      });\n  };\n\n  // Export Candidate status to PDF\n  const exportPDF = () => {\n    const unit = \"pt\";\n    const size = \"A4\";\n    const orientation = \"portrait\";\n\n    const marginLeft = 40;\n    const doc = new jsPDF(orientation, unit, size);\n\n    doc.setFontSize(15);\n\n    const title = \"Canidate Status\";\n    const headers = [\n      [\n        \"CANDIDATE NAME\",\n        \"CANDIDATE EMAIL\",\n        \"APPLIED POSITION\",\n        \"ASSIGNED INTERVIEWER\",\n        \"STATUS\",\n      ],\n    ];\n\n    const data = appliedCandidates.map((elt) => [\n      elt.candidatename.split(\"@\")[0],\n      elt.useremail,\n      elt.title,\n      elt.interviewer,\n      elt.status,\n    ]);\n    let content = {\n      startY: 50,\n      head: headers,\n      body: data,\n    };\n\n    doc.text(title, marginLeft, 40);\n    doc.autoTable(content);\n    doc.save(\"report.pdf\");\n  };\n\n  // Export Candidate Status to CSV\n  const headers = [\n    { label: \"CANDIDATE NAME\", key: \"candidatename\" },\n    { label: \"CANDIDATE EMAIL\", key: \"useremail\" },\n    { label: \"APPLIED POSITION\", key: \"title\" },\n    { label: \"ASSIGNED INTERVIEWER\", key: \"interviewer\" },\n    { label: \"STATUS\", key: \"status\" },\n  ];\n\n  const data = appliedCandidates;\n\n  const prettyLink = {\n    color: \"white\",\n  };\n\n  const appliedCandidatescolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Interviewer</div>\n      ),\n      accessor: \"interviewer\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate Name</div>\n      ),\n      accessor: \"candidatename\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => (\n        <div className=\"text-center h-6\">{row.value.split(\"@\")[0]}</div>\n      ),\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate Email</div>\n      ),\n      accessor: \"useremail\",\n      className: \"font\",\n      width: 230,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Position</div>\n      ),\n      accessor: \"title\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Status</div>,\n      accessor: \"status\",\n      className: \"font\",\n      width: 200,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n  ];\n\n  return !loading ? (\n    <div className=\"container-fluid\">\n      <div className=\"d-flex flex-row-reverse bd-highlight allExportButton\">\n        <div className=\"p-2 bd-highlight mr-5\">\n          {userRole === \"hr\" ? (\n            <button\n              className=\"btn btn-info exportPDFBtn\"\n              onClick={() => exportPDF()}\n            >\n              Generate PDF\n            </button>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <div className=\"p-2 bd-highlight\">\n          {userRole === \"hr\" ? (\n            <CSVLink data={data} headers={headers} style={prettyLink}>\n              <button className=\"btn btn-info exportCSVBtn\">\n                Generate CSV\n              </button>\n            </CSVLink>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      <div className=\"d-flex bd-highlight\">\n        <div class=\"d-inline-flex p-2 bd-highlight\">\n          <ReactTable\n            data={appliedCandidates}\n            columns={appliedCandidatescolumns}\n            className=\"-striped -highlight statusCandidateReactTable\"\n            sortable={true}\n            defaultPageSize={5}\n            resizable={false}\n            showPageSizeOptions={false}\n          />\n        </div>\n      </div>\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Candidatestatus;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/functions.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js",["101","102","103","104"],"import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useEffect, useContext, useState } from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  useHistory,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Admin from \"./components/Admin\";\nimport Interviewer from \"./components/Interviewer\";\nimport Recruiter from \"./components/Recruiter\";\nimport Assigncandidates from \"./components/Assigncandidates\";\nimport Candidates from \"./components/Candidates\";\nimport Candidatestatus from \"./components/Candidatestatus\";\nimport { UserContext } from \"./providers/UserProvider\";\nimport { UserProvider } from \"./providers/UserProvider\";\nimport \"react-toolbox/lib/table\";\nimport { auth, firestore } from \"./firebase/config\";\nimport Dashboard from \"./components/Dashboard\";\nimport Profile from \"./components/Profile\";\nimport Home from \"./components/Home\";\n\nfunction App(props) {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getUserRole();\n  }, []);\n\n  const getUserRole = () => {\n    auth.onAuthStateChanged((user) => {\n      firestore\n        .collection(\"users\")\n        .doc(user.uid)\n        .onSnapshot((querySnapshot) => {\n          setCurrentUser({\n            name: querySnapshot.data().name,\n            userRole: querySnapshot.data().role,\n          });\n        });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <UserProvider>\n          <Header />\n          <br />\n          <br />\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/home\" component={Home} />\n          {/* <Route exact path=\"/dashboard\" render={() => (currentUser?.userRole === \"hr\" ? (<Dashboard />) : (<Redirect to=\"/profile\" />))} /> */}\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route\n            exact\n            path=\"/recruiter\"\n            render={() =>\n              currentUser?.userRole === \"hr\" ? (\n                <Recruiter />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/interviewer\"\n            render={() =>\n              currentUser?.userRole === \"interviewer\" || \"hr\" ? (\n                <Interviewer />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/candidates\"\n            render={() =>\n              currentUser?.userRole === \"candidate\" || \"hr\" ? (\n                <Candidates />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/candidatestatus\"\n            render={() =>\n              currentUser?.userRole === \"candidate\" || \"hr\" ? (\n                <Candidatestatus />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/assigncandidates\"\n            render={() =>\n              currentUser?.userRole === \"hr\" ? (\n                <Assigncandidates />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route exact path=\"/profile\" component={Profile} />\n          <div className=\"footer\">\n            <Footer />\n          </div>\n        </UserProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js",[],["105","106"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js",["107","108","109"],"import React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { auth, firestore } from \"../firebase/config\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const history = useHistory();\n  var userRole;\n\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e, email, password) => {\n    e.preventDefault();\n\n    auth.signInWithEmailAndPassword(email, password).then((userAuth) => {\n      firestore\n        .collection(\"users\")\n        .doc(userAuth.user.uid)\n        .onSnapshot((querySnapshot) => {\n          setCurrentUser({\n            ...currentUser,\n            name: querySnapshot.data().name,\n            userRole: querySnapshot.data().role,\n          });\n          userRole = querySnapshot.data().role;\n          if (querySnapshot.data().role === \"hr\") {\n            history.push(\"/dashboard\");\n          } else if (querySnapshot.data().role === \"interviewer\") {\n            history.push(\"/interviewer\");\n          } else if (querySnapshot.data().role === \"candidate\") {\n            history.push(\"/candidates\");\n          }\n        });\n    });\n  };\n\n  const handleChange = (e) => {\n    if (e.target.id === \"email-login\") {\n      email = e.target.value;\n    } else {\n      password = e.target.value;\n    }\n  };\n\n  return (\n    <div className=\"loginsignup-form\">\n      <h1 className=\"text-center\">Log in</h1>\n      <form onSubmit={(e) => handleSubmit(e, email, password)}>\n        <div className=\"form-group\">\n          <input\n            onChange={handleChange}\n            className=\"form-control\"\n            type=\"email\"\n            name=\"email-login\"\n            id=\"email-login\"\n            placeholder=\"Enter Your Email\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            onChange={handleChange}\n            className=\"form-control\"\n            type=\"password\"\n            name=\"password-login\"\n            id=\"password-login\"\n            placeholder=\"Enter Your Password\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\">Login</button>\n        </div>\n        <div className=\"form-group\">\n          <h6>\n            No account?\n            <Link to=\"/signup\"> Create one</Link>\n          </h6>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js",["110","111","112","113","114"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, firestore } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { Ring } from \"react-spinners-css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Interviewer = () => {\n  const [appliedCandidates, setCandidate] = useState([]);\n  const currentLoggedUser = auth.currentUser;\n  const userName = currentLoggedUser?.email.split(\"@\")[0];\n  const capUserName = userName?.charAt(0).toUpperCase() + userName?.slice(1);\n  const [loading, setLoading] = useState(true);\n  const statusnotify = () => toast.success(\"Result updated successfully\");\n\n  useEffect(() => {\n    getCandidates();\n    // fileterInterviewer();\n    // appliedCandidates.filter(interviewer => interviewer === userName)\n  }, []);\n\n  // setStonesToShow(currentStones => {\n  //     return currentStones.filter(item => item.type === stoneType.checked && stoneColor.checked)\n  //  })\n\n  const options = [\n    { value: \"Selected\" },\n    { value: \"Rejected\" },\n    { value: \"On-Hold\" },\n  ];\n\n  const getCandidates = () => {\n    firestore\n      .collection(\"candidates\")\n      .onSnapshot((querySnapshot) => {\n        const fetchedCandidates = [];\n        querySnapshot.docs.map((document) => {\n          const fetchedCandidate = {\n            id: document.id,\n            interviewer: document.data().interviewer,\n            title: document.data().jobAssignTitle,\n            useremail: document.data().userEmail,\n            selectedstatus: document.data().status,\n            select: (\n              <div className=\"text-center h-6\">\n                <select onClick={(e) => handleChange(e, document.id)}>\n                  <option\n                    id=\"selectedValue\"\n                    name=\"selectedValue\"\n                    value=\"Please select\"\n                  >\n                    Please select...\n                  </option>\n                  <option\n                    id=\"selectedValue\"\n                    name=\"selectedValue\"\n                    value=\"Selected\"\n                  >\n                    Selected\n                  </option>\n                  <option\n                    id=\"selectedValue\"\n                    name=\"selectedValue\"\n                    value=\"Rejected\"\n                  >\n                    Rejected\n                  </option>\n                  <option\n                    id=\"selectedValue\"\n                    name=\"selectedValue\"\n                    value=\"On-Hold\"\n                  >\n                    On-Hold\n                  </option>\n                </select>\n              </div>\n            ),\n          };\n          fetchedCandidates.push(fetchedCandidate);\n        });\n        setCandidate(fetchedCandidates);\n        setCandidate(\n          fetchedCandidates.filter((int) => int.interviewer === capUserName)\n        );\n        setLoading(false);\n      });\n  };\n\n  const handleChange = async (e, id) => {\n    if (e.target.value === \"Please select\") {\n      return;\n    }\n    firestore\n      .collection(\"candidates\")\n      .doc(id)\n      .update({ status: e.target.value })\n      .then((data) => {\n        console.log(e.target.value);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    statusnotify();\n  };\n\n  const appliedCandidatescolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Interviewer</div>\n      ),\n      accessor: \"interviewer\",\n      className: \"font\",\n      width: 160,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Candidate</div>\n      ),\n      accessor: \"useremail\",\n      className: \"font\",\n      width: 160,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Position</div>\n      ),\n      accessor: \"title\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Status</div>,\n      accessor: \"selectedstatus\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Set Status</div>\n      ),\n      accessor: \"select\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n  ];\n\n  return !loading ? (\n    <div>\n      <ReactTable\n        data={appliedCandidates}\n        columns={appliedCandidatescolumns}\n        className=\"interviewerReactTable\"\n        sortable={true}\n        defaultPageSize={5}\n        resizable={false}\n        showPageSizeOptions={false}\n      />\n      <ToastContainer />\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Interviewer;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js",["115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { auth, firestore } from \"../firebase/config\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { Bar } from \"react-chartjs-2\";\nimport { getUserRole } from \"../firebase/functions\";\nimport { Redirect } from \"react-router\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { FcBullish, BsFillHeartFill } from \"react-icons/all\";\nimport { Ring } from \"react-spinners-css\";\n\nconst Candidates = () => {\n  const [JobTitle, setJobTitle] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n  const [jobAssignTitle, setAssignJobTitle] = useState(\"\");\n  const [role, getRole] = useState(\"\");\n  const currentLoggedUser = auth.currentUser;\n  const { currentUser } = useContext(UserContext);\n  var userEmail = currentLoggedUser?.email || \"\";\n  const [totalJobs, setTotalJob] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUserRole();\n    getJobsForCandidates();\n  }, []);\n\n  const getJobsForCandidates = () => {\n    firestore\n      .collection(\"jobs\")\n      .onSnapshot((querySnapshot) => {\n        const fetchedJobs = [];\n        querySnapshot.docs.map((document) => {\n          const fetchedJob = {\n            id: document.id,\n            jobAssignTitle: document.data().jobtitle,\n            openings: document.data().totalopenings,\n            status: document.data().jobstatus,\n            level: document.data().entrylevel,\n            appliedemails: document.data().appliedemails,\n            apply:\n              document.data().appliedemails === currentLoggedUser?.email ? (\n                \"Applied\"\n              ) : (\n                <button\n                  className=\"btn btn-success\"\n                  id={document.data().jobtitle}\n                  onClick={(e) =>\n                    handleSubmit(\n                      e,\n                      userEmail,\n                      document.data().jobtitle,\n                      document.id,\n                      document.data().totalopenings,\n                      document.data().appliedemails\n                    )\n                  }\n                >\n                  Apply\n                </button>\n              ),\n          };\n          setTotalJob(\n            (prevState) => prevState + parseInt(document.data().totalopenings)\n          );\n          fetchedJobs.push(fetchedJob);\n        });\n        setJobs(fetchedJobs.filter((open) => open.openings > 0));\n\n        setLoading(false);\n      });\n  };\n\n  const getUserRole = () => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        firestore\n          .collection(\"users\")\n          .doc(user.uid)\n          .onSnapshot((querySnapshot) => {\n            getRole(querySnapshot.data().role);\n          });\n      }\n    });\n  };\n\n  const decrementJobOpeningOnApply = (jobId, openingss, userEmail) => {\n    firestore\n      .collection(\"jobs\")\n      .doc(jobId)\n      .update({\n        totalopenings: parseInt(openingss - 1),\n        appliedemails: userEmail,\n      });\n  };\n\n  const handleSubmit = (e, userEmail, jobAssignTitle, jobId, openingss) => {\n    e.preventDefault();\n    document.getElementById(jobAssignTitle).disabled = true;\n\n    decrementJobOpeningOnApply(jobId, openingss, userEmail);\n\n    firestore\n      .collection(\"candidates\")\n      .doc()\n      .set({ userEmail, jobAssignTitle })\n      .catch((err) => {\n        console.log(err);\n      });\n    toast.success(\"Applied successfully\");\n  };\n\n  const jobDetailsTablecolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Title</div>\n      ),\n      accessor: \"jobAssignTitle\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Total Openings</div>\n      ),\n      accessor: \"openings\",\n      className: \"font\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Job Status</div>\n      ),\n      accessor: \"status\",\n      className: \"px-4 py-3 text-sm\",\n      width: 140,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">Entry Level</div>\n      ),\n      accessor: \"level\",\n      filterable: false,\n      width: 250,\n      Cell: (row) => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => <div className=\"text-center font-weight-bold\">Apply</div>,\n      accessor: \"apply\",\n      filterable: false,\n      width: 100,\n    },\n  ];\n\n  return !loading ? (\n    <div>\n      <div className=\"container-fluid\">\n        <div className=\"d-inline-flex p-2 bd-highlight\">\n          <Card className=\"candidatesVacanyCard\">\n            <Card.Body>\n              <div className=\"d-flex flex-row bd-highlight mb-3\">\n                <div className=\"p-2 bd-highlight\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <FcBullish size={70} />\n                  </div>\n                </div>\n                <div className=\"p-2 bd-highlight\">\n                  <p></p>\n                  <Card.Title as=\"h2\">{totalJobs}</Card.Title>\n                </div>\n              </div>\n            </Card.Body>\n            <Card.Footer>\n              <div className=\"stats\">\n                <i className=\"fas fa-redo mr-1\"></i>\n                Total Job openings\n              </div>\n            </Card.Footer>\n          </Card>\n        </div>\n\n        <div className=\"d-inline-flex p-2 bd-highlight\">\n          <Card className=\"candidatesClientCard\">\n            <Card.Body>\n              <div className=\"d-flex flex-row bd-highlight mb-3\">\n                <div className=\"p-2 bd-highlight\">\n                  <div className=\"icon-big text-center icon-warning\">\n                    <BsFillHeartFill size={70} />\n                  </div>\n                </div>\n                <div className=\"p-2 bd-highlight\">\n                  <p></p>\n                  <Card.Title as=\"h4\">10K+</Card.Title>\n                </div>\n              </div>\n            </Card.Body>\n            <Card.Footer>\n              <div className=\"stats\">\n                <i className=\"fas fa-redo mr-1\"></i>\n                Satisfied clients\n              </div>\n            </Card.Footer>\n          </Card>\n        </div>\n\n        <div className=\"d-inline-flex p-2 bd-highlight\">\n          <ReactTable\n            data={jobs}\n            columns={jobDetailsTablecolumns}\n            className=\"-striped -highlight candidateReactTable\"\n            sortable={true}\n            defaultPageSize={5}\n            resizable={false}\n            showPageSizeOptions={false}\n          />\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Candidates;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js",["128","129","130","131","132","133","134","135","136"],"import React, { useEffect, useState } from \"react\";\nimport { auth, firestore } from \"../firebase/config\";\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { Ring } from \"react-spinners-css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Profile = () => {\n  const [name, setgetName] = useState([]);\n  const [phone, setgetPhone] = useState([]);\n  const [designation, setgetDesignation] = useState([]);\n  const [organization, setgetOrganization] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUserName();\n  }, []);\n\n  const getUserName = () => {\n    var userD;\n    const uid = auth.currentUser?.uid;\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        firestore\n          .collection(\"users\")\n          .doc(user.uid)\n          .onSnapshot((querySnapshot) => {\n            userD = querySnapshot.data();\n            setgetName(userD.name);\n            setgetPhone(userD.phone);\n            setgetDesignation(userD.designation);\n            setgetOrganization(userD.organization);\n            setLoading(false);\n          });\n      } else {\n        console.log(\"else\");\n      }\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (\n      name === \"\" ||\n      phone === \"\" ||\n      designation === \"\" ||\n      organization === \"\"\n    ) {\n      toast.warning(\"Fields requiered\");\n    } else {\n      firestore\n        .collection(\"users\")\n        .doc(auth.currentUser?.uid)\n        .update({ name, phone, designation, organization })\n        .then(() => toast.success(\"Profile updated successfully\"))\n        .catch((err) => {\n          alert(err);\n        });\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.id === \"name-edit\") {\n      setgetName(e.target.value);\n    } else if (e.target.id === \"phone-edit\") {\n      setgetPhone(e.target.value);\n    } else if (e.target.id === \"designation-edit\") {\n      setgetDesignation(e.target.value);\n    } else if (e.target.id === \"orgaization-edit\") {\n      setgetOrganization(e.target.value);\n    }\n  };\n\n  return !loading ? (\n    <div className=\"container\">\n      <div className=\"d-flex bd-highlight\">\n        <div class=\"p-2 flex-grow-1 bd-highlight p-3\">\n          <Card>\n            <Card.Header>Update Profile</Card.Header>\n            <Card.Body>\n              <form\n                className=\"form-horizontal\"\n                onSubmit={(e) => {\n                  handleSubmit(e);\n                }}\n              >\n                <div className=\"mb-3 d-flex\">\n                  <label\n                    htmlFor=\"name-edit\"\n                    className=\"col-sm-3 col-form-label\"\n                  >\n                    Name{\" \"}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      onChange={handleChange}\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"name-edit\"\n                      name=\"name-edit\"\n                      placeholder=\"Enter your name\"\n                      required\n                      defaultValue={name}\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <label\n                    htmlFor=\"email-edit\"\n                    className=\"col-sm-3 col-form-label\"\n                  >\n                    Email{\" \"}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email-edit\"\n                      name=\"email-edit\"\n                      placeholder=\"Enter your email\"\n                      required\n                      defaultValue={auth.currentUser?.email}\n                      readOnly\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <label\n                    htmlFor=\"phone-edit\"\n                    className=\"col-sm-3 col-form-label\"\n                  >\n                    Phone{\" \"}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      onChange={handleChange}\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"phone-edit\"\n                      name=\"phone-edit\"\n                      placeholder=\"Enter phone number\"\n                      required\n                      defaultValue={phone}\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <label\n                    htmlFor=\"designation-edit\"\n                    className=\"col-sm-3 col-form-label\"\n                  >\n                    Designation{\" \"}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      onChange={handleChange}\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"designation-edit\"\n                      name=\"designation-edit\"\n                      placeholder=\"Enter desigation\"\n                      required\n                      defaultValue={designation}\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-3 d-flex\">\n                  <label\n                    htmlFor=\"organization-edit\"\n                    className=\"col-sm-3 col-form-label\"\n                  >\n                    Organization{\" \"}\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <input\n                      onChange={handleChange}\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"orgaization-edit\"\n                      name=\"organization-edit\"\n                      placeholder=\"Enter organization\"\n                      defaultValue={organization}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group text-center float-right\">\n                  <button className=\"btn btn-success\" type=\"submit\">\n                    Update\n                  </button>\n                </div>\n              </form>\n            </Card.Body>\n          </Card>\n        </div>\n\n        <div class=\"p-2 bd-highlight w-25 p-3\">\n          <Card>\n            <Card.Header>Profile</Card.Header>\n            <Card.Body>\n              <FaUserAlt size=\"50px\" className=\"col-md-12\" />\n              <Card.Text className=\"text-center mt-3\">\n                <strong>{name}</strong>\n              </Card.Text>\n              <Card.Text className=\"text-center\">\n                {auth.currentUser?.email}\n              </Card.Text>\n              <Card.Text className=\"text-center\">{designation}</Card.Text>\n              <Card.Text className=\"text-center\">{organization}</Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Profile;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js",["137","138","139","140","141","142","143","144"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js",["145"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { auth } from \"../firebase/config\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { firestore } from \"../firebase/config\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { FaUserAlt } from \"react-icons/fa\";\n\nconst LoggedInLinks = () => {\n  const currentUser = auth.currentUser;\n\n  const { setCurrentUser } = useContext(UserContext);\n  const [userRole, setUserRole] = useState(\"\");\n  const userName = currentUser ? currentUser.email : \"\";\n\n  const [dashboardColor, setdashboardColor] = useState(\"\");\n  const [assignCandidatesColor, setassignCandidatesColor] = useState(\"\");\n  const [interviewerColor, setinterviewerColor] = useState(\"\");\n  const [candidatesColor, setcandidatesColor] = useState(\"\");\n  const [recruiterColor, setrecruiterColor] = useState(\"\");\n  const [candidatesStatusColor, setcandidatesStatusColor] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getUserRole();\n  });\n\n  const handleClick = async () => {\n    await auth.signOut();\n    setCurrentUser(null);\n    history.push(\"/\");\n    window.location.reload();\n  };\n\n  const getUserRole = () => {\n    firestore\n      .collection(\"users\")\n      .doc(currentUser?.uid)\n      .onSnapshot((querySnapshot) => {\n        setUserRole(querySnapshot.data().role);\n      });\n  };\n\n  const setBlueColor = () => {\n    setdashboardColor(\"blue\");\n    setassignCandidatesColor(\"blue\");\n    setinterviewerColor(\"blue\");\n    setcandidatesColor(\"blue\");\n    setrecruiterColor(\"blue\");\n    setcandidatesStatusColor(\"blue\");\n  };\n\n  const activeColor = (e, path) => {\n    if (path === \"/dashboard\") {\n      setBlueColor();\n      setdashboardColor(\"black\");\n    } else if (path === \"/assigncandidates\") {\n      setBlueColor();\n      setassignCandidatesColor(\"black\");\n    } else if (path === \"/interviewer\") {\n      setBlueColor();\n      setinterviewerColor(\"black\");\n    } else if (path === \"/candidates\") {\n      setBlueColor();\n      setcandidatesColor(\"black\");\n    } else if (path === \"/recruiter\") {\n      setBlueColor();\n      setrecruiterColor(\"black\");\n    } else if (path === \"/candidatestatus\") {\n      setBlueColor();\n      setcandidatesStatusColor(\"black\");\n    } else {\n      setBlueColor();\n    }\n  };\n\n  return (\n    <div>\n      <ul>\n        {userRole === \"hr\" ? (\n          <li>\n            <Link\n              to=\"/dashboard\"\n              onClick={(e) => {\n                activeColor(e, \"/dashboard\");\n              }}\n              style={{ color: dashboardColor }}\n            >\n              Dashboard\n            </Link>\n          </li>\n        ) : (\n          \"\"\n        )}\n        {userRole === \"hr\" ? (\n          <li>\n            <Link\n              to=\"/assigncandidates\"\n              onClick={(e) => {\n                activeColor(e, \"/assigncandidates\");\n              }}\n              style={{ color: assignCandidatesColor }}\n            >\n              Interviewer\n            </Link>\n          </li>\n        ) : (\n          \"\"\n        )}\n        {userRole === \"interviewer\" ? (\n          <li>\n            <Link\n              to=\"/interviewer\"\n              onClick={(e) => {\n                activeColor(e, \"/interviewer\");\n              }}\n              style={{ color: interviewerColor }}\n            >\n              Interviews\n            </Link>\n          </li>\n        ) : (\n          \"\"\n        )}\n        {userRole === \"candidate\" ? (\n          <li>\n            <Link\n              to=\"/candidates\"\n              onClick={(e) => {\n                activeColor(e, \"/candidates\");\n              }}\n              style={{ color: candidatesColor }}\n            >\n              Apply Jobs\n            </Link>\n          </li>\n        ) : (\n          \"\"\n        )}\n        {userRole === \"hr\" ? (\n          <li>\n            <Link\n              to=\"/recruiter\"\n              onClick={(e) => {\n                activeColor(e, \"/recruiter\");\n              }}\n              style={{ color: recruiterColor }}\n            >\n              Jobs\n            </Link>\n          </li>\n        ) : (\n          \"\"\n        )}\n        <li>\n          <Link\n            to=\"/candidatestatus\"\n            onClick={(e) => {\n              activeColor(e, \"/candidatestatus\");\n            }}\n            style={{ color: candidatesStatusColor }}\n          >\n            Status\n          </Link>\n        </li>\n        <li>{userName}</li>\n        <li>\n          <Dropdown>\n            <Dropdown.Toggle variant=\"white\" id=\"dropdown-basic\">\n              <FaUserAlt />\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"listRight\">\n              <Dropdown.Item>\n                <Link\n                  to=\"/profile\"\n                  onClick={(e) => {\n                    activeColor(e);\n                  }}\n                >\n                  Profile\n                </Link>\n              </Dropdown.Item>\n              <Dropdown.Item href=\"/\" onClick={handleClick}>\n                Logout\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default LoggedInLinks;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Footer.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Dashboard.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase/config\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { firestore } from \"../firebase/config\";\n\nimport { Pie } from \"react-chartjs-2\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport { FcBullish, BsFillHeartFill } from \"react-icons/all\";\nimport { Ring } from \"react-spinners-css\";\n\nconst Dashboard = () => {\n  const item = \"\";\n\n  const [labelsArray, setlabelsArray] = useState([]);\n  const [dataArray, setdataArray] = useState([]);\n  const [jobsDetails, setJobDetails] = useState([]);\n  const [colorChart, setcolorChart] = useState([]);\n  const [isFirebaseInitialized, setFirebaseInitialized] = useState(false);\n  const [totalJobs, setTotalJob] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getJobsForCandidates();\n  }, []);\n\n  const getJobsForCandidates = async () => {\n    firestore\n      .collection(\"jobs\")\n      .onSnapshot((querySnapshot) => {\n        querySnapshot.docs.map((doc) => {\n          var item = doc.data();\n          var jobtitle = item.jobtitle;\n          setlabelsArray((prevState) => [...prevState, item.jobtitle]);\n\n          var jobVacancy = item.totalopenings;\n\n          setdataArray((prevStatee) => [...prevStatee, item.totalopenings]);\n          setTotalJob((prevState) => prevState + parseInt(item.totalopenings));\n\n          setLoading(false);\n        });\n      });\n  };\n\n  const data = {\n    labels: labelsArray,\n    datasets: [\n      {\n        data: dataArray,\n        backgroundColor: [\n          \"#f44336\",\n          \"#e91e63\",\n          \"#9c27b0\",\n          \"#673ab7\",\n          \"#3f51b5\",\n          \"#2196f3\",\n          \"#03a9f4\",\n          \"#00bcd4\",\n          \"#009688\",\n          \"#4caf50\",\n          \"#8bc34a\",\n          \"#cddc39\",\n          \"#ffeb3b\",\n          \"#ffc107\",\n          \"#ff9800\",\n          \"#ff5722\",\n          \"#795548\",\n          \"#607d8b\",\n        ],\n        hoverBackgroundColor: [\n          \"#f44336\",\n          \"#e91e63\",\n          \"#9c27b0\",\n          \"#673ab7\",\n          \"#3f51b5\",\n          \"#2196f3\",\n          \"#03a9f4\",\n          \"#00bcd4\",\n          \"#009688\",\n          \"#4caf50\",\n          \"#8bc34a\",\n          \"#cddc39\",\n          \"#ffeb3b\",\n          \"#ffc107\",\n          \"#ff9800\",\n          \"#ff5722\",\n          \"#795548\",\n          \"#607d8b\",\n        ],\n      },\n    ],\n  };\n\n  const currentUser = auth.currentUser;\n  const userMsg = currentUser\n    ? `${currentUser.email} ,Welcome back`\n    : `No user is logged in`;\n\n  return !loading ? (\n    <div className=\"container-fluid\">\n      <div className=\"d-inline-flex p-2 bd-highlight jobsPieChart\">\n        <Pie\n          data={data}\n          options={{\n            responsive: true,\n            maintainAspectRatio: true,\n          }}\n        />\n      </div>\n\n      <div className=\"d-inline-flex p-2 bd-highlight\">\n        <Card className=\"totalJobDashboardCard\">\n          <Card.Body>\n            <div className=\"d-flex flex-row bd-highlight mb-3\">\n              <div className=\"p-2 bd-highlight\">\n                <div className=\"icon-big text-center icon-warning\">\n                  <FcBullish size={70} />\n                </div>\n              </div>\n              <div className=\"p-2 bd-highlight\">\n                <p></p>\n                <Card.Title as=\"h2\">{totalJobs}</Card.Title>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <div className=\"stats\">\n              <i className=\"fas fa-redo mr-1\"></i>\n              Total Job openings\n            </div>\n          </Card.Footer>\n        </Card>\n      </div>\n\n      <div className=\"d-inline-flex p-2 bd-highlight dashboardCard\">\n        <Card className=\"totalJobDashboardCard\">\n          <Card.Body>\n            <div className=\"d-flex flex-row bd-highlight mb-3\">\n              <div className=\"p-2 bd-highlight\">\n                <div className=\"icon-big text-center icon-warning\">\n                  <FcBullish size={70} />\n                </div>\n              </div>\n              <div className=\"p-2 bd-highlight\">\n                <p></p>\n                <Card.Title as=\"h2\">2</Card.Title>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <div className=\"stats\">\n              <i className=\"fas fa-redo mr-1\"></i>\n              Assigned candidates\n            </div>\n          </Card.Footer>\n        </Card>\n      </div>\n    </div>\n  ) : (\n    <span>\n      <Ring color=\"gray\" size={100} />\n    </span>\n  );\n};\n\nexport default Dashboard;\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js",["163","164","165","166"],"import React, { useContext, useState } from 'react'\nimport { UserContext } from '../providers/UserProvider'\nimport { auth, firestore } from '../firebase/config'\nimport { Link, useHistory } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst SignUp = () => {\n\n\tconst { setCurrentUser } = useContext(UserContext);\n\tconst history = useHistory();\n\n\tlet [name, setName] = useState('');\n\tlet [email, setEmail] = useState('');\n\tlet [password, setPassword] = useState('');\n\n\n\tconst handleSubmit = (e, name, email, password) => {\n\t\te.preventDefault();\n\t\t// auth.createUserWithEmailAndPassword(email, password).then(userAuth => {\n\t\t// \tfirestore.collection('users').doc(userAuth.user.uid).set({ name })\n\t\t// \t\t.then(() => {\n\t\t// \t\t\tsetCurrentUser({ name, email })\n\t\t// \t\t\thistory.push(\"/profile\")\n\t\t// \t\t})\n\t\t// })\n\t\ttoast.warning(\"Please contact admin to create user with roles. Write to 'praveenrk189@gmail.com'\");\n\t\t// alert(\"Please contact admin to create user with roles. Write to 'praveenrk189@gmail.com'\")\n\t}\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.id === 'name-sign-up') {\n\t\t\tsetName(e.target.value);\n\t\t} else if (e.target.id === 'email-sign-up') {\n\t\t\tsetEmail(e.target.value);\n\t\t} else {\n\t\t\tsetPassword(e.target.value);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"component\">\n\t\t\t<div className=\"loginsignup-form\">\n\t\t\t\t<h1 className=\"text-center\">Sign up</h1>\n\t\t\t\t<form onSubmit={(e) => handleSubmit(e, name, email, password)}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"name-sign-up\" name=\"name-sign-up\" placeholder=\"Enter Your Name\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"email\" id=\"email-sign-up\" name=\"email-sign-up\" placeholder=\"Enter Your Email\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"password\" id=\"password-sign-up\" name=\"password-sign-up\" placeholder=\"Enter Your Password\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button className=\"btn btn-success\">Sign up</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<h6>Already have account?\n\t\t\t\t\t\t\t\t\t<Link to=\"/\"> Sign in</Link>\n\t\t\t\t\t\t</h6>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<ToastContainer />\n\t\t</div>\n\t)\n}\n\nexport default SignUp\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js",[],{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":27},{"ruleId":"167","severity":1,"message":"171","line":2,"column":18,"nodeType":"169","messageId":"170","endLine":2,"endColumn":31},{"ruleId":"167","severity":1,"message":"172","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":62,"column":32,"nodeType":"175","messageId":"176","endLine":62,"endColumn":34},{"ruleId":"177","severity":1,"message":"178","line":77,"column":5,"nodeType":"179","endLine":77,"endColumn":7,"suggestions":"180"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":27},{"ruleId":"177","severity":1,"message":"181","line":21,"column":6,"nodeType":"179","endLine":21,"endColumn":8,"suggestions":"182"},{"ruleId":"173","severity":1,"message":"174","line":39,"column":43,"nodeType":"175","messageId":"176","endLine":39,"endColumn":45},{"ruleId":"183","severity":1,"message":"184","line":60,"column":35,"nodeType":"185","messageId":"186","endLine":60,"endColumn":37},{"ruleId":"167","severity":1,"message":"187","line":4,"column":33,"nodeType":"169","messageId":"170","endLine":4,"endColumn":41},{"ruleId":"167","severity":1,"message":"188","line":8,"column":3,"nodeType":"169","messageId":"170","endLine":8,"endColumn":9},{"ruleId":"167","severity":1,"message":"189","line":33,"column":9,"nodeType":"169","messageId":"170","endLine":33,"endColumn":16},{"ruleId":"177","severity":1,"message":"190","line":37,"column":6,"nodeType":"179","endLine":37,"endColumn":8,"suggestions":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"167","severity":1,"message":"196","line":11,"column":15,"nodeType":"169","messageId":"170","endLine":11,"endColumn":23},{"ruleId":"167","severity":1,"message":"197","line":12,"column":18,"nodeType":"169","messageId":"170","endLine":12,"endColumn":29},{"ruleId":"167","severity":1,"message":"198","line":27,"column":11,"nodeType":"169","messageId":"170","endLine":27,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":27},{"ruleId":"167","severity":1,"message":"172","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":21},{"ruleId":"177","severity":1,"message":"199","line":21,"column":6,"nodeType":"179","endLine":21,"endColumn":8,"suggestions":"200"},{"ruleId":"167","severity":1,"message":"201","line":27,"column":9,"nodeType":"169","messageId":"170","endLine":27,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":38,"column":43,"nodeType":"175","messageId":"176","endLine":38,"endColumn":45},{"ruleId":"167","severity":1,"message":"202","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":13},{"ruleId":"167","severity":1,"message":"203","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":21},{"ruleId":"167","severity":1,"message":"204","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":18},{"ruleId":"167","severity":1,"message":"205","line":10,"column":16,"nodeType":"169","messageId":"170","endLine":10,"endColumn":19},{"ruleId":"167","severity":1,"message":"206","line":10,"column":21,"nodeType":"169","messageId":"170","endLine":10,"endColumn":24},{"ruleId":"167","severity":1,"message":"207","line":15,"column":10,"nodeType":"169","messageId":"170","endLine":15,"endColumn":18},{"ruleId":"167","severity":1,"message":"208","line":15,"column":20,"nodeType":"169","messageId":"170","endLine":15,"endColumn":31},{"ruleId":"167","severity":1,"message":"209","line":17,"column":10,"nodeType":"169","messageId":"170","endLine":17,"endColumn":24},{"ruleId":"167","severity":1,"message":"210","line":17,"column":26,"nodeType":"169","messageId":"170","endLine":17,"endColumn":43},{"ruleId":"167","severity":1,"message":"211","line":18,"column":10,"nodeType":"169","messageId":"170","endLine":18,"endColumn":14},{"ruleId":"167","severity":1,"message":"212","line":20,"column":11,"nodeType":"169","messageId":"170","endLine":20,"endColumn":22},{"ruleId":"177","severity":1,"message":"213","line":28,"column":6,"nodeType":"179","endLine":28,"endColumn":8,"suggestions":"214"},{"ruleId":"173","severity":1,"message":"174","line":35,"column":43,"nodeType":"175","messageId":"176","endLine":35,"endColumn":45},{"ruleId":"167","severity":1,"message":"215","line":4,"column":3,"nodeType":"169","messageId":"170","endLine":4,"endColumn":8},{"ruleId":"167","severity":1,"message":"216","line":5,"column":3,"nodeType":"169","messageId":"170","endLine":5,"endColumn":9},{"ruleId":"167","severity":1,"message":"217","line":7,"column":3,"nodeType":"169","messageId":"170","endLine":7,"endColumn":7},{"ruleId":"167","severity":1,"message":"218","line":8,"column":3,"nodeType":"169","messageId":"170","endLine":8,"endColumn":9},{"ruleId":"167","severity":1,"message":"219","line":9,"column":3,"nodeType":"169","messageId":"170","endLine":9,"endColumn":6},{"ruleId":"167","severity":1,"message":"220","line":10,"column":3,"nodeType":"169","messageId":"170","endLine":10,"endColumn":12},{"ruleId":"167","severity":1,"message":"205","line":11,"column":3,"nodeType":"169","messageId":"170","endLine":11,"endColumn":6},{"ruleId":"167","severity":1,"message":"206","line":12,"column":3,"nodeType":"169","messageId":"170","endLine":12,"endColumn":6},{"ruleId":"167","severity":1,"message":"221","line":31,"column":11,"nodeType":"169","messageId":"170","endLine":31,"endColumn":14},{"ruleId":"167","severity":1,"message":"220","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":19},{"ruleId":"167","severity":1,"message":"205","line":7,"column":27,"nodeType":"169","messageId":"170","endLine":7,"endColumn":30},{"ruleId":"167","severity":1,"message":"206","line":7,"column":32,"nodeType":"169","messageId":"170","endLine":7,"endColumn":35},{"ruleId":"167","severity":1,"message":"222","line":8,"column":21,"nodeType":"169","messageId":"170","endLine":8,"endColumn":36},{"ruleId":"167","severity":1,"message":"223","line":14,"column":7,"nodeType":"169","messageId":"170","endLine":14,"endColumn":16},{"ruleId":"167","severity":1,"message":"224","line":15,"column":7,"nodeType":"169","messageId":"170","endLine":15,"endColumn":12},{"ruleId":"177","severity":1,"message":"225","line":22,"column":6,"nodeType":"179","endLine":22,"endColumn":8,"suggestions":"226"},{"ruleId":"173","severity":1,"message":"174","line":27,"column":41,"nodeType":"175","messageId":"176","endLine":27,"endColumn":43},{"ruleId":"167","severity":1,"message":"227","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":27},{"ruleId":"167","severity":1,"message":"172","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":21},{"ruleId":"167","severity":1,"message":"206","line":7,"column":16,"nodeType":"169","messageId":"170","endLine":7,"endColumn":19},{"ruleId":"167","severity":1,"message":"220","line":7,"column":21,"nodeType":"169","messageId":"170","endLine":7,"endColumn":30},{"ruleId":"167","severity":1,"message":"205","line":7,"column":32,"nodeType":"169","messageId":"170","endLine":7,"endColumn":35},{"ruleId":"167","severity":1,"message":"222","line":8,"column":21,"nodeType":"169","messageId":"170","endLine":8,"endColumn":36},{"ruleId":"167","severity":1,"message":"228","line":12,"column":9,"nodeType":"169","messageId":"170","endLine":12,"endColumn":13},{"ruleId":"167","severity":1,"message":"229","line":16,"column":10,"nodeType":"169","messageId":"170","endLine":16,"endColumn":21},{"ruleId":"167","severity":1,"message":"230","line":16,"column":23,"nodeType":"169","messageId":"170","endLine":16,"endColumn":36},{"ruleId":"167","severity":1,"message":"231","line":17,"column":10,"nodeType":"169","messageId":"170","endLine":17,"endColumn":20},{"ruleId":"167","severity":1,"message":"232","line":17,"column":22,"nodeType":"169","messageId":"170","endLine":17,"endColumn":35},{"ruleId":"167","severity":1,"message":"233","line":18,"column":10,"nodeType":"169","messageId":"170","endLine":18,"endColumn":31},{"ruleId":"167","severity":1,"message":"234","line":18,"column":33,"nodeType":"169","messageId":"170","endLine":18,"endColumn":55},{"ruleId":"173","severity":1,"message":"174","line":30,"column":38,"nodeType":"175","messageId":"176","endLine":30,"endColumn":40},{"ruleId":"167","severity":1,"message":"235","line":32,"column":15,"nodeType":"169","messageId":"170","endLine":32,"endColumn":23},{"ruleId":"167","severity":1,"message":"236","line":35,"column":15,"nodeType":"169","messageId":"170","endLine":35,"endColumn":25},{"ruleId":"167","severity":1,"message":"237","line":95,"column":9,"nodeType":"169","messageId":"170","endLine":95,"endColumn":16},{"ruleId":"167","severity":1,"message":"238","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"239","line":3,"column":16,"nodeType":"169","messageId":"170","endLine":3,"endColumn":25},{"ruleId":"167","severity":1,"message":"240","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":24},{"ruleId":"167","severity":1,"message":"189","line":10,"column":8,"nodeType":"169","messageId":"170","endLine":10,"endColumn":15},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'ButtonToolbar' is defined but never used.","'UserContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.","ArrayExpression",["241"],"React Hook useEffect has missing dependencies: 'getCandidates' and 'getUserRole'. Either include them or remove the dependency array.",["242"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Switch' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserRole'. Either include it or remove the dependency array.",["243"],"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'userRole' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCandidates'. Either include it or remove the dependency array.",["246"],"'options' is assigned a value but never used.","'Bar' is defined but never used.","'getUserRole' is defined but never used.","'Redirect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'JobTitle' is assigned a value but never used.","'setJobTitle' is assigned a value but never used.","'jobAssignTitle' is assigned a value but never used.","'setAssignJobTitle' is assigned a value but never used.","'role' is assigned a value but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getJobsForCandidates'. Either include it or remove the dependency array.",["247"],"'Badge' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","'uid' is assigned a value but never used.","'BsFillHeartFill' is defined but never used.","'userEmail' is assigned a value but never used.","'value' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInterviewer'. Either include it or remove the dependency array.",["248"],"'SignedOutLinks' is defined but never used.","'item' is assigned a value but never used.","'jobsDetails' is assigned a value but never used.","'setJobDetails' is assigned a value but never used.","'colorChart' is assigned a value but never used.","'setcolorChart' is assigned a value but never used.","'isFirebaseInitialized' is assigned a value but never used.","'setFirebaseInitialized' is assigned a value but never used.","'jobtitle' is assigned a value but never used.","'jobVacancy' is assigned a value but never used.","'userMsg' is assigned a value but never used.","'auth' is defined but never used.","'firestore' is defined but never used.","'setCurrentUser' is assigned a value but never used.",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [handleDelete]",{"range":"261","text":"262"},"Update the dependencies array to be: [getCandidates, getUserRole]",{"range":"263","text":"264"},"Update the dependencies array to be: [getUserRole]",{"range":"265","text":"266"},"Update the dependencies array to be: [getCandidates]",{"range":"267","text":"268"},"Update the dependencies array to be: [getJobsForCandidates]",{"range":"269","text":"270"},"Update the dependencies array to be: [getInterviewer]",{"range":"271","text":"272"},[2350,2352],"[handleDelete]",[767,769],"[getCandidates, getUserRole]",[1246,1248],"[getUserRole]",[896,898],"[getCandidates]",[1131,1133],"[getJobsForCandidates]",[885,887],"[getInterviewer]"]