[{"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js":"1","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js":"2","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js":"3","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js":"4","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js":"5","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js":"6","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js":"7","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js":"8","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js":"9","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js":"10","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js":"11","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js":"12","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js":"13","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js":"14","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js":"15","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js":"16","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js":"17"},{"size":4413,"mtime":1615292192682,"results":"18","hashOfConfig":"19"},{"size":668,"mtime":1614328252000,"results":"20","hashOfConfig":"19"},{"size":6269,"mtime":1615270287809,"results":"21","hashOfConfig":"19"},{"size":2995,"mtime":1615292008360,"results":"22","hashOfConfig":"19"},{"size":388,"mtime":1614870069476,"results":"23","hashOfConfig":"19"},{"size":2369,"mtime":1614945884203,"results":"24","hashOfConfig":"19"},{"size":4195,"mtime":1615124366828,"results":"25","hashOfConfig":"19"},{"size":3595,"mtime":1615187135028,"results":"26","hashOfConfig":"19"},{"size":380,"mtime":1615112083165,"results":"27","hashOfConfig":"19"},{"size":296,"mtime":1614327890000,"results":"28","hashOfConfig":"19"},{"size":154,"mtime":1614964490674,"results":"29","hashOfConfig":"19"},{"size":2651,"mtime":1615288573784,"results":"30","hashOfConfig":"19"},{"size":156,"mtime":1614405662000,"results":"31","hashOfConfig":"19"},{"size":5858,"mtime":1615368294963,"results":"32","hashOfConfig":"19"},{"size":1023,"mtime":1614920902545,"results":"33","hashOfConfig":"19"},{"size":5450,"mtime":1615181104487,"results":"34","hashOfConfig":"19"},{"size":4438,"mtime":1615370010897,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"uba3kd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/App.js",["83","84","85","86","87"],"import './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {useEffect, useContext, useState } from 'react'\nimport { BrowserRouter, Route, Switch, useHistory, Redirect } from 'react-router-dom'\nimport Header from './components/Navbar'\nimport Footer from './components/Footer'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport Admin from './components/Admin'\nimport Interviewer from './components/Interviewer'\nimport Recruiter from \"./components/Recruiter\"\nimport Assigncandidates from \"./components/Assigncandidates\"\nimport Candidates from './components/Candidates'\nimport Candidatestatus from './components/Candidatestatus'\nimport { UserContext } from './providers/UserProvider'\nimport { UserProvider } from './providers/UserProvider'\nimport 'react-toolbox/lib/table';\nimport { auth, firestore } from './firebase/config';\nimport Dashboard from './components/Dashboard';\nimport Profile from './components/Profile';\n\n\nfunction App(props) {\n\n\tconst {currentUser, setCurrentUser } = useContext(UserContext);\n\n  const history = useHistory();\n\n\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      console.log(user.uid)\n      firestore.collection('users')\n\t\t\t\t\t.doc(user.uid)\n\t\t\t\t\t.get()\n\t\t\t\t\t.then(user => {\n\t\t\t\t\t\tsetCurrentUser({\n\t\t\t\t\t\t\temail: user.data().email,\n\t\t\t\t\t\t\tname: user.data().name,\n\t\t\t\t\t\t\tuserRole: user.data().role,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// if (user.data().role === \"admin\") {\n\t\t\t\t\t\t// \thistory.push(\"/admin\");\n\t\t\t\t\t\t// \t//console.log(\"Welcome admin\")\n\t\t\t\t\t\t// \t//return <Redirect to=\"/admin\" />\n\n\t\t\t\t\t\t// } else if (user.data().role === \"hr\") {\n\t\t\t\t\t\t// \thistory.push(\"/recruiter\");\n\t\t\t\t\t\t// \tconsole.log(\"Not authorized\")\n\t\t\t\t\t\t// } else if (user.data().role === \"interviewer\") {\n\t\t\t\t\t\t// \thistory.push(\"/interviewer\");\n\t\t\t\t\t\t// \tconsole.log(\"Not authorized\")\n\t\t\t\t\t\t// } else if (user.data().role === \"candidate\") {\n\t\t\t\t\t\t// \thistory.push(\"/candidates\");\n\t\t\t\t\t\t// \tconsole.log(\"Not authorized\")\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \thistory.push(\"/\")\n\t\t\t\t\t\t// }\n\t\t\t\t\t})\n    })\n  }, [])\n\n  console.log(currentUser?.userRole);\n\n\n  // const jsx = currentUser? <Recruiter/>:\n  // const jsx = \"\";\n  // if(jsx = )\n \n    // <div>\n    //   <Route exact path=\"/\" component={Login}/>\n    //   <Route exact path=\"/profile\" component={Profile} />\n    //   {/* <Route exact path=\"/login\" component={Login}/> */}\n    //   <Route exact path=\"/signup\" component={SignUp}/>\n    //   <Route exact path=\"/admin\" render = {() => (currentUser?.userRole === \"admin\"  ?  (<Admin />) : (alert(\"You need to be admin to access this page\")))}/>\n    //   <Route exact path=\"/recruiter\" render = {() => (currentUser?.userRole === \"hr\"  ?  (<Recruiter />) : (alert(\"You need to be hr to access this page\")))}/>\n    //   {/* <Route exact path=\"/interviewer\" component={Interviewer}/> */}\n    //   <Route exact path=\"/interviewer\" render = {() => (currentUser?.userRole === \"interviewer\"  ?  (<Interviewer />) : (alert(\"You need to be interviewer to access this page\")))}/>\n    //   <Route exact path=\"/candidates\" render = {() => (currentUser?.userRole === \"hr\"  ?  (<Candidates />) : (alert(\"You need to be hr to access this page\")))}/>\n    //   <Route exact path=\"/candidatestatus\" component={Candidatestatus}/>\n    //   <Route exact path=\"/assigncandidates\" render = {() => (currentUser?.userRole === \"hr\"  ?  (<Assigncandidates />) : (alert(\"You need to be hr to access this page\")))}/>\n    // </div>\n    \n\n  return (\n    <BrowserRouter>\n      <UserProvider>\n        <Header/>\n        <br/><br/>\n        {/* {jsx} */}\n        <div>\n      <Route exact path=\"/\" component={Login}/>\n      <Route exact path=\"/dashboard\" component={Dashboard} />\n      {/* <Route exact path=\"/login\" component={Login}/> */}\n      <Route exact path=\"/signup\" component={SignUp}/>\n      <Route exact path=\"/admin\" component={Admin}/>\n      <Route exact path=\"/recruiter\" component={Recruiter}/>\n      {/* <Route exact path=\"/interviewer\" component={Interviewer}/> */}\n      <Route exact path=\"/interviewer\" component={Interviewer}/>\n      <Route exact path=\"/candidates\" component={Candidates}/>\n      <Route exact path=\"/candidatestatus\" component={Candidatestatus}/>\n      <Route exact path=\"/assigncandidates\" component={Assigncandidates}/>\n      <Route exact path=\"/profile\" component={Profile} />\n    </div>\n        <Footer />\n      </UserProvider>  \n    </BrowserRouter>\n  );\n}\n\nexport default App;","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/firebase/config.js",[],["88","89"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidates.js",["90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { useContext, useState, useEffect } from 'react'\nimport { auth, firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport { UserContext } from '../providers/UserProvider'\nimport { Bar } from 'react-chartjs-2';\n\nconst Candidates = () => {\n\tconst [JobTitle, setJobTitle] = useState('');\n\tconst [jobs, setJobs] = useState([]);\n\tconst [jobAssignTitle, setAssignJobTitle] = useState('');\n\tconst currentLoggedUser = auth.currentUser;\n\tconst { currentUser } = useContext(UserContext);\n\tvar userEmail = currentLoggedUser?.email || '';\n\tconst [disabled, setDisabled] = useState(false);\n\tconst [appCandidateEm, setappCandidateEm] = useState([]);\n\tconst [appCandidateJb, setappCandidateJb] = useState([]);\n\tconst [isFirebaseInitialized, setFirebaseInitialized] = useState(false)\n\n\tconsole.log(currentLoggedUser?.email)\n\n\n\t//onClick={(e) => handleSubmit(e,userEmail,document.data().jobtitle)} , onClick={(e) => onBtnClick(e, document.data().jobtitle)}\n\tuseEffect(() => {\n\t\tgetJobsForCandidates()\n\t}, []);\n\n\tconsole.log(isFirebaseInitialized)\n\n\n\tconst getJobsForCandidates = () => {\n\t\tfirestore.collection('jobs').get()\n\t\t\t.then(response => {\n\t\t\t\tconst fetchedJobs = [];\n\t\t\t\tresponse.docs.forEach(document => {\n\t\t\t\t\tconst fetchedJob = {\n\t\t\t\t\t\tid: document.id,\n\t\t\t\t\t\tjobAssignTitle: document.data().jobtitle,\n\t\t\t\t\t\topenings: document.data().totalopenings,\n\t\t\t\t\t\tstatus: document.data().jobstatus,\n\t\t\t\t\t\tlevel: document.data().entrylevel,\n\t\t\t\t\t\tappliedemails: document.data().appliedemails,\n\t\t\t\t\t\tapply: (\n\t\t\t\t\t\t\t// (emBool === true && jbBool === true) ?\n\t\t\t\t\t\t\t(document.data().appliedemails === currentLoggedUser?.email) ? \"Applied\" : <button className=\"btn btn-success\" id={document.data().jobtitle} onClick={(e) => handleSubmit(e, userEmail, document.data().jobtitle, document.id, document.data().totalopenings, document.data().appliedemails)}>Apply</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t};\n\t\t\t\t\tfetchedJobs.push(fetchedJob);\n\t\t\t\t});\n\t\t\t\t// setJobs(fetchedJobs);\n\t\t\t\tsetJobs(fetchedJobs.filter(open => open.openings > 0));\n\t\t\t})\n\t}\n\n\n\t// appCandidateEm.map(function (val) {\n\t// \tif (userEmail === val.uEmail) {\n\t// \t\tsetemBool(true)\n\t// \t}\n\t// })\n\n\n\n\tconsole.log(jobs)\n\n\tconst decrementJobOpeningOnApply = (jobId, openingss, userEmail) => {\n\t\tconsole.log(jobId);\n\t\tconsole.log(parseInt(openingss - 1))\n\n\t\t// var appliedemails = \"ArrayThree\"\n\t\t// firestore.collection('jobs').doc(\"ozjBKq5TNMpqGDMmomgt\")\n\t\t// \t.set({ appliedemails: [{ mail: \"cdadam@awr.com\"}] },\n\t\t// \t\t{ merge: true }\n\t\t// .update({appliedemails: [{appliedemails}]}, { merge: true}\n\n\n\n\t\t// if (docSnapshot.exists) {\n\t\t// \tusersRef.onSnapshot((doc) => {\n\t\t// \t\t// do stuff with the data\n\t\t// \t});\n\t\t// } else {\n\t\t// \tusersRef.set({}) // create the document\n\t\t// }\n\t\t// );\n\n\t\tfirestore.collection('jobs')\n\t\t\t.doc(jobId)\n\t\t\t.update({ totalopenings: parseInt(openingss - 1), appliedemails: userEmail })\n\t}\n\n\tconst handleSubmit = (e, userEmail, jobAssignTitle, jobId, openingss) => {\n\t\te.preventDefault();\n\t\tdocument.getElementById(jobAssignTitle).disabled = true;\n\t\tconsole.log(userEmail);\n\t\tconsole.log(jobAssignTitle);\n\n\t\tdecrementJobOpeningOnApply(jobId, openingss, userEmail);\n\n\t\tfirestore.collection('candidates')\n\t\t\t.doc()\n\t\t\t.set({ userEmail, jobAssignTitle })\n\t\t\t.catch((err) => { console.log(err) })\n\t}\n\n\tconst handleChange = async (e) => {\n\t\tsetAssignJobTitle(e.target.value);\n\t\tconsole.log(jobAssignTitle)\n\t}\n\n\t// Bar chart\n\n\tconst data = {\n\t\tlabels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'My First dataset',\n\t\t\t\tbackgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\tborderColor: 'rgba(255,99,132,1)',\n\t\t\t\tborderWidth: 1,\n\t\t\t\thoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\thoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\tdata: [65, 59, 80, 81, 56, 55, 40]\n\t\t\t}\n\t\t]\n\t};\n\n\n\tconst jobDetailsTablecolumns = [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Title\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'jobAssignTitle',\n\t\t\tclassName: 'font',\n\t\t\twidth: 140,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tTotal Openings\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'openings',\n\t\t\tclassName: 'font',\n\t\t\twidth: 140,\n\t\t\tCell: row => <div className=\"text-center h-6\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Status\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'status',\n\t\t\tclassName: 'px-4 py-3 text-sm',\n\t\t\twidth: 140,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tEntry Level\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'level',\n\t\t\tfilterable: false,\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tApply\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'apply',\n\t\t\tfilterable: false,\n\t\t\twidth: 100,\n\t\t\t//Cell: row => <div className=\"text-center h-4\"><button className=\"btn btn-success\" type=\"submit\">Apply</button></div>,\n\t\t}\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <h6 className=\"applyTitle\">{`${currentLoggedUser.email},select the job title and click apply`}</h6> */}\n\n\t\t\t{/* <form onSubmit={(e) => {\n                handleSubmit(e, userEmail, jobAssignTitle)\n            }}>\n                <select className=\"jobSelectDD\" onChange={(e) => handleChange(e)}>\n                    {jobs.length !== 0 && jobs.map((data) => (\n                    <option id=\"selectedValue\" name=\"selectedValue\" value={data.title}>{data.title}</option> )\n                    )}\n                </select>\n                <div className=\"form-group text-center\">\n                    <button className=\"btn btn-success applyCandidateJob\" type=\"submit\">Apply</button>\n                </div>\n            </form> */}\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<ReactTable\n\t\t\t\t\tdata={jobs}\n\t\t\t\t\tcolumns={jobDetailsTablecolumns}\n\t\t\t\t\tclassName='candidateReactTable'\n\t\t\t\t\tsortable={true}\n\t\t\t\t\tdefaultPageSize={5}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Bar\n\t\t\t\tdata={data}\n\t\t\t\twidth={10}\n\t\t\t\theight={10}\n\t\t\t\toptions={{\n\t\t\t\t\tmaintainAspectRatio: false\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Candidates",["102","103"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/LoggedInLinks.js",["104"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../providers/UserProvider'\nimport { auth } from '../firebase/config'\nimport SignedOutLinks from './SignedOutLinks'\nimport { firestore } from '../firebase/config';\nimport { Dropdown } from \"react-bootstrap\";\nimport { FaUserAlt } from \"react-icons/fa\";\n\n\n\n\nconst LoggedInLinks = () => {\n\n    const currentUser = auth.currentUser\n\n    const { setCurrentUser } = useContext(UserContext);\n    const [userRole, setUserRole] = useState(\"\");\n    console.log(currentUser.uid)\n\n    const history = useHistory()\n\n    useEffect(() => {\n        getUserRole();\n    })\n\n    const handleClick = async () => {\n        await auth.signOut();\n        setCurrentUser(null);\n        history.push(\"/\");\n        window.location.reload();\n    }\n\n    const getUserRole = () => {\n        firestore.collection('users').doc(currentUser.uid).get()\n            .then(response => {\n                setUserRole(response.data().role)\n            })\n    }\n\n    console.log(userRole);\n\n\n    return (\n        <div>\n            <ul>\n                {/* <li><Link to=\"/profile\">Profile</Link></li>\n                <li><Link to=\"/recruiter\">Recruiter</Link></li>\n                <li><Link to=\"/assigncandidates\">Assign</Link></li>\n                <li><Link to=\"/candidates\">Candidates</Link></li>\n                <li><Link to=\"/interviewer\">Interviewer</Link></li>\n                <li><Link to=\"/candidatestatus\">Status</Link></li>\n                <li><Link to=\"/\" onClick={handleClick}>Logout</Link></li> */}\n                <li><Link to=\"/dashboard\">Dashboard</Link></li>\n                {userRole === \"hr\" ?\n                    <li><Link to=\"/assigncandidates\">Interviewer</Link></li>\n                    : \"\"}\n                {userRole === \"interviewer\" ?\n                    <li><Link to=\"/interviewer\">Intervieweree</Link></li>\n                    : \"\"}\n                {userRole === \"candidate\" ?\n                    <li><Link to=\"/candidates\">Candidates</Link></li>\n                    : \"\"}\n                {userRole === \"hr\" ?\n                    <li><Link to=\"/recruiter\">Jobs</Link></li>\n                    : \"\"}\n                <li><Link to=\"/candidatestatus\">Status</Link></li>\n                <li><Link to=\"/\" onClick={handleClick}>Logout</Link></li>\n                <li>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"white\" id=\"dropdown-basic\">\n                            <FaUserAlt />\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu className=\"listRight\">\n                            <Dropdown.Item href=\"/profile\">Profile</Dropdown.Item>\n                            <Dropdown.Item href=\"/\" onClick={handleClick}>Logout</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default LoggedInLinks\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/providers/UserProvider.js",[],["105","106"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignUp.js",["107","108","109"],"import React, { useContext, useState } from 'react'\nimport { UserContext } from '../providers/UserProvider'\nimport { auth, firestore } from '../firebase/config'\nimport { Link } from 'react-router-dom'\n\nconst SignUp = () => {\n\n    const { setCurrentUser } = useContext(UserContext);\n\n    let [name, setName] = useState('');\n    let [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n\n\n    const handleSubmit = (e, name, email, password) => {\n        e.preventDefault();\n        auth.createUserWithEmailAndPassword(email, password).then(userAuth => {\n            firestore.collection('users').doc(userAuth.user.uid).set({name})\n                .then(() => {\n                    setCurrentUser({name, email})\n                })\n        })\n    }\n\n    const handleChange = (e) => {\n        if(e.target.id === 'name-sign-up'){\n            name = e.target.value;\n        } else if (e.target.id === 'email-sign-up'){\n            email = e.target.value;\n        } else {\n            password = e.target.value\n        }\n    }\n\n    return (\n\t\t\t<div className=\"component\">\n\t\t\t\t<div className=\"loginsignup-form\">\n\t\t\t\t<h1 className=\"text-center\">Sign up</h1>\n\t\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e, name, email, password)}>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"name-sign-up\">Name</label>\n\t\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"name-sign-up\" name=\"name-sign-up\" placeholder=\"Enter Your Name\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">     \n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"email-sign-up\">Email</label>\n\t\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"email\" id=\"email-sign-up\" name=\"email-sign-up\" placeholder=\"Enter Your Email\"/>\n\t\t\t\t\t\t\t</div>   \n\t\t\t\t\t\t\t<div className=\"form-group\">     \n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"password-sign-up\">Password</label>\n\t\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"password\" id=\"password-sign-up\" name=\"password-sign-up\" placeholder=\"Enter Your Password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">     \n\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success\">Sign up</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<h6>Already have account?\n\t\t\t\t\t\t\t\t\t<Link to=\"/\"> Sign in</Link>\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n    )\n}\n\nexport default SignUp\n","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Assigncandidates.js",["110","111","112","113","114","115","116","117"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport { UserContext } from '../providers/UserProvider'\n\nconst Assigncandidates = () => {\n\n  const [appliedCandidates, setCandidate] = useState([]);\n  const [assignInterviewer, setInterviewer] = useState([]);\n  const [assignInterviewerName, setInterviewerName] = useState([]);\n  const [candidateAssignInterviewer, setAssignInterviewer] = useState('');\n  const { currentUser } = useContext(UserContext);\n  var userEmail = currentUser?.email || '';\n  var value = 'initial'\n\n  useEffect(() => {\n    getInterviewer();\n  }, []);\n\n\n\n  const getCandidates = (fetchedUsers) => {\n    firestore.collection('candidates').get()\n      .then(response => {\n        const fetchedCandidates = [];\n        console.log(\"Length\", fetchedUsers.length);\n        response.docs.forEach(document => {\n          const fetchedCandidate = {\n            id: document.id,\n            title: document.data().userEmail,\n            openings: document.data().jobAssignTitle,\n            assignedTo: document.data().interviewer,\n            select: (\n              <select onClick={(e) => handleChange(e, document.id)}>\n                {fetchedUsers.length !== 0 && fetchedUsers.map((data) => (\n                  <option \n                    id=\"selectedValue\" \n                    name=\"selectedValue\" \n                    value={data.name}\n                    selected={document.data().interviewer === data.name}\n                    >\n                    {data.name}\n                  </option>)\n                )}\n              </select>\n            )\n          };\n          fetchedCandidates.push(fetchedCandidate);\n        });\n\n        setCandidate(fetchedCandidates);\n      })\n  }\n\n\n  const getInterviewer = () => {\n    firestore.collection('users').where('role', '==', \"interviewer\").get()\n      .then(response => {\n        const fetchedUsers = [];\n        response.docs.forEach(document => {\n          const fetchedUser = {\n            id: document.id,\n            name: document.data().name,\n            role: document.data().role,\n          };\n          fetchedUsers.push(fetchedUser);\n        });\n        // setInterviewer(fetchedUsers);\n        getCandidates(fetchedUsers);\n      })\n  }\n\n\n  const handleChange = async (e, id) => {\n    console.log(e.target.value);\n    firestore.collection('candidates')\n      .doc(id)\n      .update({ interviewer: e.target.value })\n      .then((data) => { console.log(data) })\n      .catch((err) => { console.log(err) })\n  }\n\n\n  // const handleSubmit = (e, userEmail, jobAssignTitle) => {\n  //   e.preventDefault();\n  //   firestore.collection('candidates')\n  //     .doc()\n  //     .set({ userEmail, jobAssignTitle })\n  //     .then((data) => {console.log(data)})\n  //     .catch((err) => { console.log(err) })\n  // }\n\n  const appliedCandidatescolumns = [\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">\n          Job Title\n        </div>\n      ),\n      accessor: 'title',\n      className: 'font',\n      width: 250,\n      Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">\n          Total Openings\n        </div>\n      ),\n      accessor: 'openings',\n      className: 'font',\n      width: 250,\n      Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n    },\n    {\n      Header: () => (\n        <div className=\"text-center font-weight-bold\">\n          Assign To\n        </div>\n      ),\n      accessor: 'select',\n      className: 'font',\n      width: 250,\n      Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n    }\n  ];\n\n  return (\n    <div>\n      {console.log(assignInterviewer)}\n      {/* <h6 className=\"applyTitle\">{`${userEmail} select and assign interviewer`}</h6> */}\n      <ReactTable\n        data={appliedCandidates}\n        columns={appliedCandidatescolumns}\n        className='assignCandidateReactTable'\n        sortable={true}\n        defaultPageSize={5}\n      />\n    </div>\n  )\n}\n\nexport default Assigncandidates","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Candidatestatus.js",["118","119","120"],"import React, { useContext, useState, useEffect } from 'react'\nimport { firestore, auth } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\n\nconst Candidatestatus = () => {\n\n    const [appliedCandidates, setCandidate] = useState([]);\n    const currentLoggedUser = auth.currentUser;\n\n    useEffect(() => {\n        getCandidates();\n    }, []);\n\n    const getCandidates = () => {\n        firestore.collection('candidates').get()\n            .then(response => {\n                const fetchedCandidates = [];\n                response.docs.forEach(document => {\n                    const fetchedCandidate = {\n                        id: document.id,\n                        interviewer: document.data().interviewer,\n                        title: document.data().jobAssignTitle,\n                        useremail: document.data().userEmail,\n                        status: document.data().status,\n                    };\n                    fetchedCandidates.push(fetchedCandidate);\n                });\n                //(currentLoggedUser?.email === \"hrjack@awr.com\")) ? fetchedCandidates : setCandidate(fetchedCandidates.filter(email => (email.useremail === currentLoggedUser?.email)));\n                if(currentLoggedUser == null || currentLoggedUser?.email === \"hrjack@awr.com\"){\n                    setCandidate(fetchedCandidates)\n                }\n                else {\n                    setCandidate(fetchedCandidates.filter(email => (email.useremail === currentLoggedUser?.email) || (email.useremail ==\"hrjack@awr.com\") ));\n                }\n                \n                //setCandidate(fetchedCandidates.filter(email => (email.useremail === currentLoggedUser?.email) || (email.useremail ==\"hrjack@awr.com\") ));\n            })\n    }\n    console.log(appliedCandidates)\n    const appliedCandidatescolumns = [\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Interviewer\n                </div>\n            ),\n            accessor: 'interviewer',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Candidate\n                </div>\n            ),\n            accessor: 'useremail',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Position\n                </div>\n            ),\n            accessor: 'title',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Status\n                </div>\n            ),\n            accessor: 'status',\n            className: 'font',\n            width: 250,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        }\n    ];\n\n\n    return (\n        <div>\n            <ReactTable\n                data={appliedCandidates}\n                columns={appliedCandidatescolumns}\n                className='assignCandidateReactTable'\n                sortable={true}\n                defaultPageSize={5}\n            />\n        </div>\n    )\n}\n\nexport default Candidatestatus","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/SignedOutLinks.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/index.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Home.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Login.js",["121","122","123","124","125"],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Admin.js",[],"/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Recruiter.js",["126","127","128","129","130","131","132"],"import React, { useContext, useState, useEffect } from 'react'\nimport { Button, ButtonToolbar, Modal } from 'react-bootstrap';\nimport { UserContext } from '../providers/UserProvider'\nimport { firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\n\n\nconst Recruiter = () => {\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\tconst [jobsDetails, setJobDetails] = useState([]);\n\tlet [jobtitle, setJobTitle] = useState('');\n\tlet [totalopenings, setTotalOpenings] = useState('');\n\tlet [jobstatus, setJobStatus] = useState('');\n\tlet [entrylevel, setEntryLevel] = useState('');\n\tconst offersRef = firestore.collection('jobs');\n\n\tconst handleSubmit = (e, jobtitle, totalopenings, jobstatus, entrylevel) => {\n\t\te.preventDefault();\n\t\tif (jobtitle, totalopenings, jobstatus, entrylevel == \"\") {\n\t\t\talert(\"Input fields cannot be empty\")\n\t\t} else {\n\t\t\tfirestore.collection('jobs')\n\t\t\t\t.doc()\n\t\t\t\t.set({ jobtitle, totalopenings, jobstatus, entrylevel })\n\t\t\t\t.then(() => handleClose()\n\n\t\t\t\t)\n\t\t\t\t.catch((err) => { console.log(err) })\n\t\t}\n\t}\n\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.id === 'jobtitle-create') {\n\t\t\tsetJobTitle(e.target.value);\n\t\t} else if (e.target.id === 'totalopenings-create') {\n\t\t\tsetTotalOpenings(parseInt(e.target.value));\n\t\t} else if (e.target.id === 'jobstatus-create') {\n\t\t\tsetJobStatus(e.target.value);\n\t\t} else {\n\t\t\tsetEntryLevel(e.target.value);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tawait firestore.collection('jobs').get()\n\t\t\t\t.then((snapshot) => {\n\t\t\t\t\tconsole.log(snapshot);\n\t\t\t\t\tvar data = []\n\t\t\t\t\tsnapshot.docs.map((doc) => {\n\t\t\t\t\t\tconsole.log(doc.id)\n\n\t\t\t\t\t\tvar view = (\n\t\t\t\t\t\t\t<div className=\"text-center h-4\"><button type='button' onClick={() => handleDelete(doc.id)}>\n\t\t\t\t\t\t\t\t&#10005;\n\t\t\t\t\t\t</button></div>\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tdata.push({ ...doc.data(), id: doc.id, view })\n\t\t\t\t\t\tsetJobDetails([...data]);\n\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log('Error getting documents', err);\n\t\t\t\t});\n\t\t})();\n\t}, []);\n\tconsole.log(jobsDetails)\n\tconst handleDelete = id => {\n\t\toffersRef.doc(id)\n\t\t\t.delete()\n\t};\n\n\n\tconst BootstrapModal = () => (\n\t\t<div>\n\t\t\t<Button className=\"addJobBtn\" variant=\"primary\" onClick={handleShow}>\n\t\t\t\tAdd job\n\t\t\t</Button>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>New Job</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form onSubmit={(e) => {\n\t\t\t\t\t\thandleSubmit(e, jobtitle, totalopenings, jobstatus, entrylevel)\n\t\t\t\t\t\tconsole.log('here')\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"jobtitle-create\">Job Title</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"jobtitle-create\" name=\"jobtitle-create\" placeholder=\"Enter Job Title\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"totalopenings-create\">Total Openings</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"number\" id=\"totalopenings-create\" name=\"totalopenings-create\" placeholder=\"Enter Total Openings\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"jobstatus-create\">Job Status</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"jobstatus-create\" name=\"jobstatus-create\" placeholder=\"Enter Status\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label htmlFor=\"entrylevel-create\">Entry Level</label>\n\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control\" type=\"text\" id=\"entrylevel-create\" name=\"entrylevel-create\" placeholder=\"Enter entry Level\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group text-center\">\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button> &nbsp;\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" type=\"submit\">Create</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n\n\n\tconst jobDetailsTablecolumns = [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Title\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'id',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tshow: false,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Title\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'jobtitle',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tTotal Openings\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'totalopenings',\n\t\t\tclassName: 'font',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-6\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tJob Status\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'jobstatus',\n\t\t\tclassName: 'px-4 py-3 text-sm',\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tEntry Level\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'entrylevel',\n\t\t\tfilterable: false,\n\t\t\twidth: 250,\n\t\t\tCell: row => <div className=\"text-center h-4\">{row.value}</div>,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className=\"text-center font-weight-bold\">\n\t\t\t\t\tAction\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'view',\n\t\t\tfilterable: false,\n\t\t\twidth: 250,\n\t\t\t// Cell: row => {row.value}\n\t\t}\n\t];\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<h4 className=\"recruiterTitle font-weight-bold\">Jobs</h4>\n\t\t\t{BootstrapModal()}\n\t\t\t{console.log(jobsDetails)}\n\t\t\t<div className=\"container text-center\">\n\t\t\t\t<ReactTable\n\t\t\t\t\tdata={jobsDetails}\n\t\t\t\t\tcolumns={jobDetailsTablecolumns}\n\t\t\t\t\tclassName='ReactTable'\n\t\t\t\t\tsortable={true}\n\t\t\t\t\tdefaultPageSize={5}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t</>\n\t);\n}\n\n// render(<Recruiter />);\n\nexport default Recruiter","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Navbar.js",["133","134","135","136"],"import React, { useContext, useState } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { UserContext } from '../providers/UserProvider'\nimport LoggedInLinks from './LoggedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {auth} from '../firebase/config'\n\n\nconst Header = () => {\n\n    // const [loading, setLoading] = useState(true)\n\n    const currentUser = auth.currentUser\n\n    \n\n\n    // if(currentUser) {\n    //     setLoading(false)\n    // }\n\n    const links = currentUser ? <LoggedInLinks/> : <SignedOutLinks/>\n    const userName = currentUser ? currentUser.email : \"\";\n    const title = \"Applicant Tracking\"\n\n    // if(loading) {\n        return (\n            <Navbar bg=\"light\" variant=\"light\">\n                {console.log(currentUser)}\n            <Navbar.Brand href=\"#home\">Awesome Recruiter</Navbar.Brand>\n            <Nav className=\"mr-auto navLinks\">\n                {userName}\n                {links}\n            </Nav>\n        </Navbar>\n        )\n    // }\n}\n\nexport default Header","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Interviewer.js",["137","138","139","140"],"import React, { useContext, useState, useEffect } from 'react'\nimport { auth, firestore } from '../firebase/config';\nimport ReactTable from \"react-table-6\";\nimport 'react-table-6/react-table.css';\nimport { UserContext } from '../providers/UserProvider'\n\nconst Interviewer = () => {\n    const [appliedCandidates, setCandidate] = useState([]);\n    const currentLoggedUser = auth.currentUser;\n    const userName = currentLoggedUser?.email.split(\"@\")[0];\n    const capUserName = userName?.charAt(0).toUpperCase() + userName?.slice(1);\n    console.log(capUserName)\n\n    useEffect(() => {\n        getCandidates();\n        // fileterInterviewer();\n        // appliedCandidates.filter(interviewer => interviewer === userName)\n    }, []);\n\n    // setStonesToShow(currentStones => {\n    //     return currentStones.filter(item => item.type === stoneType.checked && stoneColor.checked)\n    //  })\n\n    const options = [\n        { value: 'Selected' },\n        { value: 'Rejected' },\n        { value: 'On-Hold' }\n      ]\n\n    const getCandidates = () => {\n        firestore.collection('candidates').get()\n            .then(response => {\n                const fetchedCandidates = [];\n                response.docs.forEach(document => {\n                    const fetchedCandidate = {\n                        id: document.id,\n                        interviewer: document.data().interviewer,\n                        title: document.data().jobAssignTitle,\n                        useremail: document.data().userEmail,\n                        selectedstatus: document.data().status,\n                        select: (\n                            <div className=\"text-center h-6\">\n                                <select onClick={(e) => handleChange(e, document.id)}>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"Selected\"  >Selected</option>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"Rejected\"  >Rejected</option>\n                                    <option id=\"selectedValue\" name=\"selectedValue\" value=\"On-Hold\"  >On-Hold</option>\n                                    {/* <option id=\"selectedValue\" name=\"selectedValue\" >{options.value}</option> */}\n                                    {/* <option id=\"selectedValue\" name=\"selectedValue\" value=\"Selected\"  selected={document.data().status ? document.data().status : \"Selected\"}>Selected</option> */}\n                                </select>\n                            </div>\n                        ),\n                    };\n                    fetchedCandidates.push(fetchedCandidate);\n                });\n                setCandidate(fetchedCandidates);\n                // .filter(user => user.online == true);\n                setCandidate(fetchedCandidates.filter(int => int.interviewer === capUserName));\n            })\n    }\n\n    console.log(appliedCandidates)\n\n    // const fileterInterviewer = () => {\n    //     setCandidate(appliedCandidates.filter(interviewer => interviewer === userName))\n    //     console.log(appliedCandidates)\n    // }\n\n    const handleChange = async (e, id) => {\n        firestore.collection('candidates')\n        .doc(id)\n        .update({ status: e.target.value })\n        .then((data) => {console.log(e.target.value)})\n        .catch((err) => { console.log(err) })\n      }\n\n    const appliedCandidatescolumns = [\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Interviewer\n                </div>\n            ),\n            accessor: 'interviewer',\n            className: 'font',\n            width: 160,\n            Cell: row => <div className=\"text-center h-4\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Candidate\n                </div>\n            ),\n            accessor: 'useremail',\n            className: 'font',\n            width: 160,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Position\n                </div>\n            ),\n            accessor: 'title',\n            className: 'font',\n            width: 140,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Status\n                </div>\n            ),\n            accessor: 'selectedstatus',\n            className: 'font',\n            width: 140,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        },\n        {\n            Header: () => (\n                <div className=\"text-center font-weight-bold\">\n                    Set Status\n                </div>\n            ),\n            accessor: 'select',\n            className: 'font',\n            width: 140,\n            Cell: row => <div className=\"text-center h-6\">{row.value}</div>,\n        }\n    ];\n\n    return (\n        <div>\n            <ReactTable\n                data={appliedCandidates}\n                columns={appliedCandidatescolumns}\n                className='assignCandidateReactTable'\n                sortable={true}\n                defaultPageSize={5}\n            />\n        </div >\n    )\n}\n\nexport default Interviewer","/home/praveen/react-projects/ats-sample/FirebaseAuth-React-working/FirebaseAuth-React/src/components/Profile.js",["141","142","143","144","145","146","147","148"],"import React, { useEffect, useState } from 'react';\nimport { auth, firestore } from \"../firebase/config\";\nimport { Badge, Button, Card, Form, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport { FaUserAlt } from \"react-icons/fa\";\n\n\nconst Profile = () => {\n\tconst [getUser, setgetUser] = useState([]);\n\tconst [name, setgetName] = useState([]);\n\tconst [phone, setgetPhone] = useState([]);\n\tconst [designation, setgetDesignation] = useState([]);\n\tconst [organization, setgetOrganization] = useState([]);\n\n\tconst Loadingscreen = () => {\n\t\treturn getUser? true : false\n\t}\n\n\tuseEffect(() => {\n\t\tgetUserName();\n\t}, [])\n\n\tconst getUserName = () => {\n\t\tconst userD = [];\n\t\tfirestore.collection(\"users\")\n\t\t\t.doc(auth.currentUser?.uid)\n\t\t\t.get()\n\t\t\t.then((document) => {\n\t\t\t\tuserD.push(document.data())\n\n\t\t\t\tsetgetUser(...userD, getUser)\n\t\t\t})\n\t}\n\tconsole.log(getUser)\n\n\tconst handleSubmit = (e, name, phone, designation, organization) => {\n\t\te.preventDefault();\n\t\tif (name, phone, designation, organization == \"\") {\n\t\t\talert(\"Field values required\")\n\t\t} else {\n\t\t\tfirestore.collection('users')\n\t\t\t\t.doc(auth.currentUser?.uid)\n\t\t\t\t.update({name, phone, designation, organization})\n\t\t\t\t.then(() => alert(\"Profile updated\"))\n\t\t\t\t.catch((err) => { alert(err) })\n\t\t}\n\t}\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.id === 'name-edit') {\n\t\t\tsetgetName(e.target.value);\n\t\t} else if (e.target.id === 'phone-edit') {\n\t\t\tsetgetPhone(e.target.value);\n\t\t} else if (e.target.id === 'designation-edit') {\n\t\t\tsetgetDesignation(e.target.value);\n\t\t} else if (e.target.id === 'orgaization-edit') {\n\t\t\tsetgetOrganization(e.target.value);\n\t\t}\n\t}\n\n\treturn Loadingscreen()? (\n\t\t<>\n\t\t\t<Container >\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-md-8\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Header>Update Profile</Card.Header>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<form className=\"form-horizontal\" onSubmit={(e) => {\n\t\t\t\t\t\t\t\t\thandleSubmit(e, name, phone, designation, organization)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"name-edit flex-grow-1 col-sm-2\">Name: </label>\n\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control ml-5 col-sm-10\" type=\"text\" id=\"name-edit\" name=\"name-edit\" placeholder=\"Enter your name\" defaultValue={getUser.name} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"email-edit col-sm-2\">Email: </label>\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-control ml-5 col-sm-10\" type=\"number\" id=\"email-edit\" name=\"email-edit\" placeholder=\"Enter your email\" defaultValue={auth.currentUser?.email} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"phone-edit col-sm-2\">Phone: </label>\n\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control ml-5\" type=\"text\" id=\"phone-edit\" name=\"phone-edit\" placeholder=\"Enter phone number\" defaultValue={getUser.phone} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex justify-content-around\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"designation-edit col-sm-2\">Designation: </label>\n\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control ml-5\" type=\"text\" id=\"designation-edit\" name=\"designation-edit\" placeholder=\"Enter desigation\" defaultValue={getUser.designation} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex justify-content-around\">\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"organization-edit col-sm-2\">Organization: </label>\n\t\t\t\t\t\t\t\t\t\t<input onChange={handleChange} className=\"form-control ml-5\" type=\"text\" id=\"orgaization-edit\" name=\"organization-edit\" placeholder=\"Enter organization\" defaultValue={getUser.organization} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group text-center float-right\">\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" type=\"submit\">Update</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"col-md-4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Header>Profile</Card.Header>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<FaUserAlt size=\"50px\" className=\"col-md-12\" />\n\t\t\t\t\t\t\t\t<Card.Text className=\"text-center mt-3\"><strong>{getUser.name}</strong></Card.Text>\n\t\t\t\t\t\t\t\t<Card.Text className=\"text-center\">{auth.currentUser?.email}</Card.Text>\n\t\t\t\t\t\t\t\t<Card.Text className=\"text-center\">{getUser.designation}</Card.Text>\n\t\t\t\t\t\t\t\t<Card.Text className=\"text-center\">{getUser.organization}</Card.Text>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t) : (\n\t\t<span>Loading...</span>\n\t)\n}\n\nexport default Profile\n",{"ruleId":"149","severity":1,"message":"150","line":3,"column":32,"nodeType":"151","messageId":"152","endLine":3,"endColumn":40},{"ruleId":"149","severity":1,"message":"153","line":4,"column":32,"nodeType":"151","messageId":"152","endLine":4,"endColumn":38},{"ruleId":"149","severity":1,"message":"154","line":4,"column":52,"nodeType":"151","messageId":"152","endLine":4,"endColumn":60},{"ruleId":"149","severity":1,"message":"155","line":27,"column":9,"nodeType":"151","messageId":"152","endLine":27,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":62,"column":6,"nodeType":"158","endLine":62,"endColumn":8,"suggestions":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"149","severity":1,"message":"164","line":9,"column":9,"nodeType":"151","messageId":"152","endLine":9,"endColumn":17},{"ruleId":"149","severity":1,"message":"165","line":9,"column":19,"nodeType":"151","messageId":"152","endLine":9,"endColumn":30},{"ruleId":"149","severity":1,"message":"166","line":13,"column":10,"nodeType":"151","messageId":"152","endLine":13,"endColumn":21},{"ruleId":"149","severity":1,"message":"167","line":15,"column":9,"nodeType":"151","messageId":"152","endLine":15,"endColumn":17},{"ruleId":"149","severity":1,"message":"168","line":15,"column":19,"nodeType":"151","messageId":"152","endLine":15,"endColumn":30},{"ruleId":"149","severity":1,"message":"169","line":16,"column":9,"nodeType":"151","messageId":"152","endLine":16,"endColumn":23},{"ruleId":"149","severity":1,"message":"170","line":16,"column":25,"nodeType":"151","messageId":"152","endLine":16,"endColumn":42},{"ruleId":"149","severity":1,"message":"171","line":17,"column":9,"nodeType":"151","messageId":"152","endLine":17,"endColumn":23},{"ruleId":"149","severity":1,"message":"172","line":17,"column":25,"nodeType":"151","messageId":"152","endLine":17,"endColumn":42},{"ruleId":"149","severity":1,"message":"173","line":18,"column":32,"nodeType":"151","messageId":"152","endLine":18,"endColumn":54},{"ruleId":"156","severity":1,"message":"174","line":26,"column":5,"nodeType":"158","endLine":26,"endColumn":7,"suggestions":"175"},{"ruleId":"149","severity":1,"message":"176","line":106,"column":8,"nodeType":"151","messageId":"152","endLine":106,"endColumn":20},{"ruleId":"160","replacedBy":"177"},{"ruleId":"162","replacedBy":"178"},{"ruleId":"149","severity":1,"message":"179","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":22},{"ruleId":"160","replacedBy":"180"},{"ruleId":"162","replacedBy":"181"},{"ruleId":"149","severity":1,"message":"182","line":10,"column":16,"nodeType":"151","messageId":"152","endLine":10,"endColumn":23},{"ruleId":"149","severity":1,"message":"183","line":11,"column":17,"nodeType":"151","messageId":"152","endLine":11,"endColumn":25},{"ruleId":"149","severity":1,"message":"184","line":12,"column":20,"nodeType":"151","messageId":"152","endLine":12,"endColumn":31},{"ruleId":"149","severity":1,"message":"185","line":10,"column":29,"nodeType":"151","messageId":"152","endLine":10,"endColumn":43},{"ruleId":"149","severity":1,"message":"186","line":11,"column":10,"nodeType":"151","messageId":"152","endLine":11,"endColumn":31},{"ruleId":"149","severity":1,"message":"187","line":11,"column":33,"nodeType":"151","messageId":"152","endLine":11,"endColumn":51},{"ruleId":"149","severity":1,"message":"188","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":36},{"ruleId":"149","severity":1,"message":"189","line":12,"column":38,"nodeType":"151","messageId":"152","endLine":12,"endColumn":58},{"ruleId":"149","severity":1,"message":"190","line":14,"column":7,"nodeType":"151","messageId":"152","endLine":14,"endColumn":16},{"ruleId":"149","severity":1,"message":"191","line":15,"column":7,"nodeType":"151","messageId":"152","endLine":15,"endColumn":12},{"ruleId":"156","severity":1,"message":"192","line":19,"column":6,"nodeType":"158","endLine":19,"endColumn":8,"suggestions":"193"},{"ruleId":"149","severity":1,"message":"194","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"156","severity":1,"message":"195","line":13,"column":8,"nodeType":"158","endLine":13,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":34,"column":135,"nodeType":"199","messageId":"200","endLine":34,"endColumn":137},{"ruleId":"149","severity":1,"message":"201","line":3,"column":16,"nodeType":"151","messageId":"152","endLine":3,"endColumn":25},{"ruleId":"149","severity":1,"message":"166","line":10,"column":10,"nodeType":"151","messageId":"152","endLine":10,"endColumn":21},{"ruleId":"149","severity":1,"message":"202","line":10,"column":23,"nodeType":"151","messageId":"152","endLine":10,"endColumn":37},{"ruleId":"149","severity":1,"message":"183","line":14,"column":14,"nodeType":"151","messageId":"152","endLine":14,"endColumn":22},{"ruleId":"149","severity":1,"message":"184","line":15,"column":17,"nodeType":"151","messageId":"152","endLine":15,"endColumn":28},{"ruleId":"149","severity":1,"message":"194","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"203","line":2,"column":18,"nodeType":"151","messageId":"152","endLine":2,"endColumn":31},{"ruleId":"149","severity":1,"message":"204","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":24,"column":15,"nodeType":"207","messageId":"208","endLine":24,"endColumn":16},{"ruleId":"197","severity":1,"message":"198","line":24,"column":54,"nodeType":"199","messageId":"200","endLine":24,"endColumn":56},{"ruleId":"209","severity":1,"message":"210","line":56,"column":30,"nodeType":"211","messageId":"212","endLine":56,"endColumn":32},{"ruleId":"156","severity":1,"message":"213","line":74,"column":5,"nodeType":"158","endLine":74,"endColumn":7,"suggestions":"214"},{"ruleId":"149","severity":1,"message":"194","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":1,"column":29,"nodeType":"151","messageId":"152","endLine":1,"endColumn":37},{"ruleId":"149","severity":1,"message":"204","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"215","line":24,"column":11,"nodeType":"151","messageId":"152","endLine":24,"endColumn":16},{"ruleId":"149","severity":1,"message":"194","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"204","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"156","severity":1,"message":"195","line":18,"column":8,"nodeType":"158","endLine":18,"endColumn":10,"suggestions":"216"},{"ruleId":"149","severity":1,"message":"217","line":24,"column":11,"nodeType":"151","messageId":"152","endLine":24,"endColumn":18},{"ruleId":"149","severity":1,"message":"218","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":15},{"ruleId":"149","severity":1,"message":"219","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":23},{"ruleId":"149","severity":1,"message":"220","line":3,"column":31,"nodeType":"151","messageId":"152","endLine":3,"endColumn":35},{"ruleId":"149","severity":1,"message":"221","line":3,"column":37,"nodeType":"151","messageId":"152","endLine":3,"endColumn":43},{"ruleId":"149","severity":1,"message":"222","line":3,"column":45,"nodeType":"151","messageId":"152","endLine":3,"endColumn":48},{"ruleId":"156","severity":1,"message":"223","line":20,"column":5,"nodeType":"158","endLine":20,"endColumn":7,"suggestions":"224"},{"ruleId":"205","severity":1,"message":"206","line":37,"column":11,"nodeType":"207","messageId":"208","endLine":37,"endColumn":12},{"ruleId":"197","severity":1,"message":"198","line":37,"column":46,"nodeType":"199","messageId":"200","endLine":37,"endColumn":48},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array.","ArrayExpression",["225"],"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"'JobTitle' is assigned a value but never used.","'setJobTitle' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","'appCandidateEm' is assigned a value but never used.","'setappCandidateEm' is assigned a value but never used.","'appCandidateJb' is assigned a value but never used.","'setappCandidateJb' is assigned a value but never used.","'setFirebaseInitialized' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getJobsForCandidates'. Either include it or remove the dependency array.",["228"],"'handleChange' is assigned a value but never used.",["226"],["227"],"'SignedOutLinks' is defined but never used.",["226"],["227"],"'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'setInterviewer' is assigned a value but never used.","'assignInterviewerName' is assigned a value but never used.","'setInterviewerName' is assigned a value but never used.","'candidateAssignInterviewer' is assigned a value but never used.","'setAssignInterviewer' is assigned a value but never used.","'userEmail' is assigned a value but never used.","'value' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInterviewer'. Either include it or remove the dependency array.",["229"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getCandidates'. Either include it or remove the dependency array.",["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'firestore' is defined but never used.","'setCurrentUser' is assigned a value but never used.","'ButtonToolbar' is defined but never used.","'UserContext' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["231"],"'title' is assigned a value but never used.",["232"],"'options' is assigned a value but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserName'. Either include it or remove the dependency array.",["233"],{"desc":"234","fix":"235"},"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"240","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [setCurrentUser]",{"range":"247","text":"248"},"Update the dependencies array to be: [getJobsForCandidates]",{"range":"249","text":"250"},"Update the dependencies array to be: [getInterviewer]",{"range":"251","text":"252"},"Update the dependencies array to be: [getCandidates]",{"range":"253","text":"254"},"Update the dependencies array to be: [handleDelete]",{"range":"255","text":"256"},{"range":"257","text":"254"},"Update the dependencies array to be: [getUserName]",{"range":"258","text":"259"},[2041,2043],"[setCurrentUser]",[1070,1072],"[getJobsForCandidates]",[710,712],"[getInterviewer]",[394,396],"[getCandidates]",[2092,2094],"[handleDelete]",[725,727],[623,625],"[getUserName]"]